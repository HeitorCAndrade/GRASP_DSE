

================================================================
== Vivado HLS Report for 'sha_transform'
================================================================
* Date:           Mon May  2 16:40:31 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        Raise_dse
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 8.00 ns | 2.883 ns |   1.00 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      395|      395| 3.160 us | 3.160 us |  395|  395|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 2  |      192|      192|         3|          -|          -|    64|    no    |
        |- Loop 3  |       40|       40|         2|          -|          -|    20|    no    |
        |- Loop 4  |       40|       40|         2|          -|          -|    20|    no    |
        |- Loop 5  |       40|       40|         2|          -|          -|    20|    no    |
        |- Loop 6  |       40|       40|         2|          -|          -|    20|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 7 
5 --> 6 
6 --> 4 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 12 
11 --> 10 
12 --> 13 14 
13 --> 12 
14 --> 15 16 
15 --> 14 
16 --> 17 18 
17 --> 16 
18 --> 19 
19 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.73>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%W = alloca [80 x i32], align 16" [benchmarks/sha/sha.c:99]   --->   Operation 20 'alloca' 'W' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_1 : Operation 21 [1/1] (0.73ns)   --->   "br label %1" [benchmarks/sha/sha.c:101]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.73>

State 2 <SV = 1> <Delay = 0.82>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 22 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.72ns)   --->   "%icmp_ln101 = icmp eq i5 %i_0, -16" [benchmarks/sha/sha.c:101]   --->   Operation 23 'icmp' 'icmp_ln101' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.82ns)   --->   "%i = add i5 %i_0, 1" [benchmarks/sha/sha.c:101]   --->   Operation 25 'add' 'i' <Predicate = true> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln101, label %.preheader6.preheader, label %2" [benchmarks/sha/sha.c:101]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln103 = zext i5 %i_0 to i64" [benchmarks/sha/sha.c:103]   --->   Operation 27 'zext' 'zext_ln103' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%sha_info_data_addr = getelementptr inbounds [16 x i32]* @sha_info_data, i64 0, i64 %zext_ln103" [benchmarks/sha/sha.c:103]   --->   Operation 28 'getelementptr' 'sha_info_data_addr' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_2 : Operation 29 [2/2] (0.73ns)   --->   "%sha_info_data_load = load i32* %sha_info_data_addr, align 4" [benchmarks/sha/sha.c:103]   --->   Operation 29 'load' 'sha_info_data_load' <Predicate = (!icmp_ln101)> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_2 : Operation 30 [1/1] (0.73ns)   --->   "br label %.preheader6" [benchmarks/sha/sha.c:105]   --->   Operation 30 'br' <Predicate = (icmp_ln101)> <Delay = 0.73>

State 3 <SV = 2> <Delay = 2.02>
ST_3 : Operation 31 [1/2] (0.73ns)   --->   "%sha_info_data_load = load i32* %sha_info_data_addr, align 4" [benchmarks/sha/sha.c:103]   --->   Operation 31 'load' 'sha_info_data_load' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%W_addr = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln103" [benchmarks/sha/sha.c:103]   --->   Operation 32 'getelementptr' 'W_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (1.29ns)   --->   "store i32 %sha_info_data_load, i32* %W_addr, align 4" [benchmarks/sha/sha.c:103]   --->   Operation 33 'store' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br label %1" [benchmarks/sha/sha.c:101]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 2.15>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%i_1 = phi i7 [ %i_6, %3 ], [ 16, %.preheader6.preheader ]"   --->   Operation 35 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.71ns)   --->   "%icmp_ln105 = icmp eq i7 %i_1, -48" [benchmarks/sha/sha.c:105]   --->   Operation 36 'icmp' 'icmp_ln105' <Predicate = true> <Delay = 0.71> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 37 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %icmp_ln105, label %4, label %3" [benchmarks/sha/sha.c:105]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.85ns)   --->   "%add_ln107 = add i7 %i_1, -3" [benchmarks/sha/sha.c:107]   --->   Operation 39 'add' 'add_ln107' <Predicate = (!icmp_ln105)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln107 = zext i7 %add_ln107 to i64" [benchmarks/sha/sha.c:107]   --->   Operation 40 'zext' 'zext_ln107' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%W_addr_1 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln107" [benchmarks/sha/sha.c:107]   --->   Operation 41 'getelementptr' 'W_addr_1' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_4 : Operation 42 [2/2] (1.29ns)   --->   "%W_load = load i32* %W_addr_1, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 42 'load' 'W_load' <Predicate = (!icmp_ln105)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_4 : Operation 43 [1/1] (0.85ns)   --->   "%add_ln107_1 = add i7 %i_1, -8" [benchmarks/sha/sha.c:107]   --->   Operation 43 'add' 'add_ln107_1' <Predicate = (!icmp_ln105)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln107_1 = zext i7 %add_ln107_1 to i64" [benchmarks/sha/sha.c:107]   --->   Operation 44 'zext' 'zext_ln107_1' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%W_addr_2 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln107_1" [benchmarks/sha/sha.c:107]   --->   Operation 45 'getelementptr' 'W_addr_2' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_4 : Operation 46 [2/2] (1.29ns)   --->   "%W_load_1 = load i32* %W_addr_2, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 46 'load' 'W_load_1' <Predicate = (!icmp_ln105)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_4 : Operation 47 [2/2] (0.73ns)   --->   "%A = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 0), align 16" [benchmarks/sha/sha.c:109]   --->   Operation 47 'load' 'A' <Predicate = (icmp_ln105)> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>

State 5 <SV = 3> <Delay = 2.15>
ST_5 : Operation 48 [1/2] (1.29ns)   --->   "%W_load = load i32* %W_addr_1, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 48 'load' 'W_load' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_5 : Operation 49 [1/2] (1.29ns)   --->   "%W_load_1 = load i32* %W_addr_2, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 49 'load' 'W_load_1' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_5 : Operation 50 [1/1] (0.85ns)   --->   "%add_ln107_2 = add i7 %i_1, -14" [benchmarks/sha/sha.c:107]   --->   Operation 50 'add' 'add_ln107_2' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln107_2 = zext i7 %add_ln107_2 to i64" [benchmarks/sha/sha.c:107]   --->   Operation 51 'zext' 'zext_ln107_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%W_addr_3 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln107_2" [benchmarks/sha/sha.c:107]   --->   Operation 52 'getelementptr' 'W_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [2/2] (1.29ns)   --->   "%W_load_2 = load i32* %W_addr_3, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 53 'load' 'W_load_2' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_5 : Operation 54 [1/1] (0.85ns)   --->   "%add_ln107_3 = add i7 %i_1, -16" [benchmarks/sha/sha.c:107]   --->   Operation 54 'add' 'add_ln107_3' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln107_3 = zext i7 %add_ln107_3 to i64" [benchmarks/sha/sha.c:107]   --->   Operation 55 'zext' 'zext_ln107_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%W_addr_4 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln107_3" [benchmarks/sha/sha.c:107]   --->   Operation 56 'getelementptr' 'W_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [2/2] (1.29ns)   --->   "%W_load_3 = load i32* %W_addr_4, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 57 'load' 'W_load_3' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>

State 6 <SV = 4> <Delay = 2.88>
ST_6 : Operation 58 [1/2] (1.29ns)   --->   "%W_load_2 = load i32* %W_addr_3, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 58 'load' 'W_load_2' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_6 : Operation 59 [1/2] (1.29ns)   --->   "%W_load_3 = load i32* %W_addr_4, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 59 'load' 'W_load_3' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_6 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node xor_ln107_2)   --->   "%xor_ln107 = xor i32 %W_load_1, %W_load" [benchmarks/sha/sha.c:107]   --->   Operation 60 'xor' 'xor_ln107' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node xor_ln107_2)   --->   "%xor_ln107_1 = xor i32 %W_load_2, %W_load_3" [benchmarks/sha/sha.c:107]   --->   Operation 61 'xor' 'xor_ln107_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln107_2 = xor i32 %xor_ln107_1, %xor_ln107" [benchmarks/sha/sha.c:107]   --->   Operation 62 'xor' 'xor_ln107_2' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln107_4 = zext i7 %i_1 to i64" [benchmarks/sha/sha.c:107]   --->   Operation 63 'zext' 'zext_ln107_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%W_addr_5 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln107_4" [benchmarks/sha/sha.c:107]   --->   Operation 64 'getelementptr' 'W_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (1.29ns)   --->   "store i32 %xor_ln107_2, i32* %W_addr_5, align 4" [benchmarks/sha/sha.c:107]   --->   Operation 65 'store' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_6 : Operation 66 [1/1] (0.85ns)   --->   "%i_6 = add i7 %i_1, 1" [benchmarks/sha/sha.c:105]   --->   Operation 66 'add' 'i_6' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "br label %.preheader6" [benchmarks/sha/sha.c:105]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 3> <Delay = 0.73>
ST_7 : Operation 68 [1/2] (0.73ns)   --->   "%A = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 0), align 16" [benchmarks/sha/sha.c:109]   --->   Operation 68 'load' 'A' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_7 : Operation 69 [2/2] (0.73ns)   --->   "%B = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 1), align 4" [benchmarks/sha/sha.c:110]   --->   Operation 69 'load' 'B' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_7 : Operation 70 [2/2] (0.73ns)   --->   "%C = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 2), align 8" [benchmarks/sha/sha.c:111]   --->   Operation 70 'load' 'C' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>

State 8 <SV = 4> <Delay = 0.73>
ST_8 : Operation 71 [1/2] (0.73ns)   --->   "%B = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 1), align 4" [benchmarks/sha/sha.c:110]   --->   Operation 71 'load' 'B' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_8 : Operation 72 [1/2] (0.73ns)   --->   "%C = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 2), align 8" [benchmarks/sha/sha.c:111]   --->   Operation 72 'load' 'C' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_8 : Operation 73 [2/2] (0.73ns)   --->   "%D = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 3), align 4" [benchmarks/sha/sha.c:112]   --->   Operation 73 'load' 'D' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_8 : Operation 74 [2/2] (0.73ns)   --->   "%E = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 4), align 16" [benchmarks/sha/sha.c:113]   --->   Operation 74 'load' 'E' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>

State 9 <SV = 5> <Delay = 0.73>
ST_9 : Operation 75 [1/2] (0.73ns)   --->   "%D = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 3), align 4" [benchmarks/sha/sha.c:112]   --->   Operation 75 'load' 'D' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_9 : Operation 76 [1/2] (0.73ns)   --->   "%E = load i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 4), align 16" [benchmarks/sha/sha.c:113]   --->   Operation 76 'load' 'E' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_9 : Operation 77 [1/1] (0.73ns)   --->   "br label %5" [benchmarks/sha/sha.c:115]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.73>

State 10 <SV = 6> <Delay = 1.29>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%E_0 = phi i32 [ %E, %4 ], [ %E_4, %6 ]"   --->   Operation 78 'phi' 'E_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%E_4 = phi i32 [ %D, %4 ], [ %D_1, %6 ]"   --->   Operation 79 'phi' 'E_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%D_1 = phi i32 [ %C, %4 ], [ %C_1, %6 ]"   --->   Operation 80 'phi' 'D_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%B_0 = phi i32 [ %B, %4 ], [ %B_4, %6 ]"   --->   Operation 81 'phi' 'B_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%B_4 = phi i32 [ %A, %4 ], [ %temp, %6 ]"   --->   Operation 82 'phi' 'B_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%i_2 = phi i5 [ 0, %4 ], [ %i_7, %6 ]"   --->   Operation 83 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.72ns)   --->   "%icmp_ln115 = icmp eq i5 %i_2, -12" [benchmarks/sha/sha.c:115]   --->   Operation 84 'icmp' 'icmp_ln115' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 85 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20) nounwind"   --->   Operation 85 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 86 [1/1] (0.82ns)   --->   "%i_7 = add i5 %i_2, 1" [benchmarks/sha/sha.c:115]   --->   Operation 86 'add' 'i_7' <Predicate = true> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "br i1 %icmp_ln115, label %.preheader5.preheader, label %6" [benchmarks/sha/sha.c:115]   --->   Operation 87 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln117 = zext i5 %i_2 to i64" [benchmarks/sha/sha.c:117]   --->   Operation 88 'zext' 'zext_ln117' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%W_addr_6 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln117" [benchmarks/sha/sha.c:117]   --->   Operation 89 'getelementptr' 'W_addr_6' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_10 : Operation 90 [2/2] (1.29ns)   --->   "%W_load_4 = load i32* %W_addr_6, align 4" [benchmarks/sha/sha.c:117]   --->   Operation 90 'load' 'W_load_4' <Predicate = (!icmp_ln115)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_10 : Operation 91 [1/1] (0.73ns)   --->   "br label %.preheader5" [benchmarks/sha/sha.c:119]   --->   Operation 91 'br' <Predicate = (icmp_ln115)> <Delay = 0.73>

State 11 <SV = 7> <Delay = 2.20>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i32 %B_4 to i27" [benchmarks/sha/sha.c:117]   --->   Operation 92 'trunc' 'trunc_ln117' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.00ns)   --->   "%lshr_ln = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_4, i32 27, i32 31)" [benchmarks/sha/sha.c:117]   --->   Operation 93 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 94 [1/1] (0.00ns)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %trunc_ln117, i5 %lshr_ln)" [benchmarks/sha/sha.c:117]   --->   Operation 94 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node or_ln117)   --->   "%and_ln117 = and i32 %B_0, %D_1" [benchmarks/sha/sha.c:117]   --->   Operation 95 'and' 'and_ln117' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node or_ln117)   --->   "%xor_ln117 = xor i32 %B_0, -1" [benchmarks/sha/sha.c:117]   --->   Operation 96 'xor' 'xor_ln117' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node or_ln117)   --->   "%and_ln117_1 = and i32 %E_4, %xor_ln117" [benchmarks/sha/sha.c:117]   --->   Operation 97 'and' 'and_ln117_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 98 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln117 = or i32 %and_ln117, %and_ln117_1" [benchmarks/sha/sha.c:117]   --->   Operation 98 'or' 'or_ln117' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 99 [1/2] (1.29ns)   --->   "%W_load_4 = load i32* %W_addr_6, align 4" [benchmarks/sha/sha.c:117]   --->   Operation 99 'load' 'W_load_4' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_11 : Operation 100 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117 = add i32 %W_load_4, %E_0" [benchmarks/sha/sha.c:117]   --->   Operation 100 'add' 'add_ln117' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 101 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_1 = add i32 1518500249, %or_ln" [benchmarks/sha/sha.c:117]   --->   Operation 101 'add' 'add_ln117_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 102 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln117_2 = add i32 %add_ln117_1, %or_ln117" [benchmarks/sha/sha.c:117]   --->   Operation 102 'add' 'add_ln117_2' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 103 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%temp = add i32 %add_ln117_2, %add_ln117" [benchmarks/sha/sha.c:117]   --->   Operation 103 'add' 'temp' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln117_1 = trunc i32 %B_0 to i2" [benchmarks/sha/sha.c:117]   --->   Operation 104 'trunc' 'trunc_ln117_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 105 [1/1] (0.00ns)   --->   "%lshr_ln117_1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_0, i32 2, i32 31)" [benchmarks/sha/sha.c:117]   --->   Operation 105 'partselect' 'lshr_ln117_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 106 [1/1] (0.00ns)   --->   "%C_1 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %trunc_ln117_1, i30 %lshr_ln117_1)" [benchmarks/sha/sha.c:117]   --->   Operation 106 'bitconcatenate' 'C_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "br label %5" [benchmarks/sha/sha.c:115]   --->   Operation 107 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 7> <Delay = 1.29>
ST_12 : Operation 108 [1/1] (0.00ns)   --->   "%E_1 = phi i32 [ %E_5, %7 ], [ %E_0, %.preheader5.preheader ]"   --->   Operation 108 'phi' 'E_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 109 [1/1] (0.00ns)   --->   "%E_5 = phi i32 [ %D_2, %7 ], [ %E_4, %.preheader5.preheader ]"   --->   Operation 109 'phi' 'E_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 110 [1/1] (0.00ns)   --->   "%D_2 = phi i32 [ %C_2, %7 ], [ %D_1, %.preheader5.preheader ]"   --->   Operation 110 'phi' 'D_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%B_1 = phi i32 [ %B_5, %7 ], [ %B_0, %.preheader5.preheader ]"   --->   Operation 111 'phi' 'B_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%B_5 = phi i32 [ %temp_1, %7 ], [ %B_4, %.preheader5.preheader ]"   --->   Operation 112 'phi' 'B_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%i_3 = phi i6 [ %i_8, %7 ], [ 20, %.preheader5.preheader ]"   --->   Operation 113 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (0.71ns)   --->   "%icmp_ln119 = icmp eq i6 %i_3, -24" [benchmarks/sha/sha.c:119]   --->   Operation 114 'icmp' 'icmp_ln119' <Predicate = true> <Delay = 0.71> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20) nounwind"   --->   Operation 115 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "br i1 %icmp_ln119, label %.preheader4.preheader, label %7" [benchmarks/sha/sha.c:119]   --->   Operation 116 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln121 = zext i6 %i_3 to i64" [benchmarks/sha/sha.c:121]   --->   Operation 117 'zext' 'zext_ln121' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "%W_addr_7 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln121" [benchmarks/sha/sha.c:121]   --->   Operation 118 'getelementptr' 'W_addr_7' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_12 : Operation 119 [2/2] (1.29ns)   --->   "%W_load_5 = load i32* %W_addr_7, align 4" [benchmarks/sha/sha.c:121]   --->   Operation 119 'load' 'W_load_5' <Predicate = (!icmp_ln119)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_12 : Operation 120 [1/1] (0.84ns)   --->   "%i_8 = add i6 1, %i_3" [benchmarks/sha/sha.c:119]   --->   Operation 120 'add' 'i_8' <Predicate = (!icmp_ln119)> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 121 [1/1] (0.73ns)   --->   "br label %.preheader4" [benchmarks/sha/sha.c:123]   --->   Operation 121 'br' <Predicate = (icmp_ln119)> <Delay = 0.73>

State 13 <SV = 8> <Delay = 2.20>
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln121 = trunc i32 %B_5 to i27" [benchmarks/sha/sha.c:121]   --->   Operation 122 'trunc' 'trunc_ln121' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%lshr_ln1 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_5, i32 27, i32 31)" [benchmarks/sha/sha.c:121]   --->   Operation 123 'partselect' 'lshr_ln1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "%or_ln1 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %trunc_ln121, i5 %lshr_ln1)" [benchmarks/sha/sha.c:121]   --->   Operation 124 'bitconcatenate' 'or_ln1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln121_1)   --->   "%xor_ln121 = xor i32 %E_5, %B_1" [benchmarks/sha/sha.c:121]   --->   Operation 125 'xor' 'xor_ln121' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 126 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln121_1 = xor i32 %xor_ln121, %D_2" [benchmarks/sha/sha.c:121]   --->   Operation 126 'xor' 'xor_ln121_1' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 127 [1/2] (1.29ns)   --->   "%W_load_5 = load i32* %W_addr_7, align 4" [benchmarks/sha/sha.c:121]   --->   Operation 127 'load' 'W_load_5' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_13 : Operation 128 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121 = add i32 %W_load_5, %E_1" [benchmarks/sha/sha.c:121]   --->   Operation 128 'add' 'add_ln121' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 129 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_1 = add i32 1859775393, %or_ln1" [benchmarks/sha/sha.c:121]   --->   Operation 129 'add' 'add_ln121_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 130 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln121_2 = add i32 %add_ln121_1, %xor_ln121_1" [benchmarks/sha/sha.c:121]   --->   Operation 130 'add' 'add_ln121_2' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 131 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%temp_1 = add i32 %add_ln121_2, %add_ln121" [benchmarks/sha/sha.c:121]   --->   Operation 131 'add' 'temp_1' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 132 [1/1] (0.00ns)   --->   "%trunc_ln121_1 = trunc i32 %B_1 to i2" [benchmarks/sha/sha.c:121]   --->   Operation 132 'trunc' 'trunc_ln121_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%lshr_ln121_1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_1, i32 2, i32 31)" [benchmarks/sha/sha.c:121]   --->   Operation 133 'partselect' 'lshr_ln121_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "%C_2 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %trunc_ln121_1, i30 %lshr_ln121_1)" [benchmarks/sha/sha.c:121]   --->   Operation 134 'bitconcatenate' 'C_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 135 [1/1] (0.00ns)   --->   "br label %.preheader5" [benchmarks/sha/sha.c:119]   --->   Operation 135 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 8> <Delay = 1.29>
ST_14 : Operation 136 [1/1] (0.00ns)   --->   "%E_2 = phi i32 [ %E_6, %8 ], [ %E_1, %.preheader4.preheader ]"   --->   Operation 136 'phi' 'E_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 137 [1/1] (0.00ns)   --->   "%E_6 = phi i32 [ %D_3, %8 ], [ %E_5, %.preheader4.preheader ]"   --->   Operation 137 'phi' 'E_6' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 138 [1/1] (0.00ns)   --->   "%D_3 = phi i32 [ %C_3, %8 ], [ %D_2, %.preheader4.preheader ]"   --->   Operation 138 'phi' 'D_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 139 [1/1] (0.00ns)   --->   "%B_2 = phi i32 [ %B_6, %8 ], [ %B_1, %.preheader4.preheader ]"   --->   Operation 139 'phi' 'B_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 140 [1/1] (0.00ns)   --->   "%B_6 = phi i32 [ %temp_2, %8 ], [ %B_5, %.preheader4.preheader ]"   --->   Operation 140 'phi' 'B_6' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 141 [1/1] (0.00ns)   --->   "%i_4 = phi i6 [ %i_9, %8 ], [ -24, %.preheader4.preheader ]"   --->   Operation 141 'phi' 'i_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 142 [1/1] (0.71ns)   --->   "%icmp_ln123 = icmp eq i6 %i_4, -4" [benchmarks/sha/sha.c:123]   --->   Operation 142 'icmp' 'icmp_ln123' <Predicate = true> <Delay = 0.71> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 143 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20) nounwind"   --->   Operation 143 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 144 [1/1] (0.00ns)   --->   "br i1 %icmp_ln123, label %.preheader.preheader, label %8" [benchmarks/sha/sha.c:123]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i6 %i_4 to i64" [benchmarks/sha/sha.c:125]   --->   Operation 145 'zext' 'zext_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "%W_addr_8 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln125" [benchmarks/sha/sha.c:125]   --->   Operation 146 'getelementptr' 'W_addr_8' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_14 : Operation 147 [2/2] (1.29ns)   --->   "%W_load_6 = load i32* %W_addr_8, align 4" [benchmarks/sha/sha.c:125]   --->   Operation 147 'load' 'W_load_6' <Predicate = (!icmp_ln123)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_14 : Operation 148 [1/1] (0.84ns)   --->   "%i_9 = add i6 1, %i_4" [benchmarks/sha/sha.c:123]   --->   Operation 148 'add' 'i_9' <Predicate = (!icmp_ln123)> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 149 [1/1] (0.73ns)   --->   "br label %.preheader" [benchmarks/sha/sha.c:127]   --->   Operation 149 'br' <Predicate = (icmp_ln123)> <Delay = 0.73>

State 15 <SV = 9> <Delay = 2.20>
ST_15 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i32 %B_6 to i27" [benchmarks/sha/sha.c:125]   --->   Operation 150 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 151 [1/1] (0.00ns)   --->   "%lshr_ln2 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_6, i32 27, i32 31)" [benchmarks/sha/sha.c:125]   --->   Operation 151 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 152 [1/1] (0.00ns)   --->   "%or_ln2 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %trunc_ln125, i5 %lshr_ln2)" [benchmarks/sha/sha.c:125]   --->   Operation 152 'bitconcatenate' 'or_ln2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node or_ln125_1)   --->   "%or_ln125 = or i32 %D_3, %E_6" [benchmarks/sha/sha.c:125]   --->   Operation 153 'or' 'or_ln125' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node or_ln125_1)   --->   "%and_ln125 = and i32 %B_2, %or_ln125" [benchmarks/sha/sha.c:125]   --->   Operation 154 'and' 'and_ln125' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node or_ln125_1)   --->   "%and_ln125_1 = and i32 %D_3, %E_6" [benchmarks/sha/sha.c:125]   --->   Operation 155 'and' 'and_ln125_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 156 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln125_1 = or i32 %and_ln125, %and_ln125_1" [benchmarks/sha/sha.c:125]   --->   Operation 156 'or' 'or_ln125_1' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 157 [1/2] (1.29ns)   --->   "%W_load_6 = load i32* %W_addr_8, align 4" [benchmarks/sha/sha.c:125]   --->   Operation 157 'load' 'W_load_6' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_15 : Operation 158 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125 = add i32 %W_load_6, %E_2" [benchmarks/sha/sha.c:125]   --->   Operation 158 'add' 'add_ln125' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 159 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_1 = add i32 %or_ln125_1, %or_ln2" [benchmarks/sha/sha.c:125]   --->   Operation 159 'add' 'add_ln125_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 160 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln125_2 = add i32 -1894007588, %add_ln125_1" [benchmarks/sha/sha.c:125]   --->   Operation 160 'add' 'add_ln125_2' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 161 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%temp_2 = add i32 %add_ln125_2, %add_ln125" [benchmarks/sha/sha.c:125]   --->   Operation 161 'add' 'temp_2' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln125_1 = trunc i32 %B_2 to i2" [benchmarks/sha/sha.c:125]   --->   Operation 162 'trunc' 'trunc_ln125_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 163 [1/1] (0.00ns)   --->   "%lshr_ln125_1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_2, i32 2, i32 31)" [benchmarks/sha/sha.c:125]   --->   Operation 163 'partselect' 'lshr_ln125_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 164 [1/1] (0.00ns)   --->   "%C_3 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %trunc_ln125_1, i30 %lshr_ln125_1)" [benchmarks/sha/sha.c:125]   --->   Operation 164 'bitconcatenate' 'C_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 165 [1/1] (0.00ns)   --->   "br label %.preheader4" [benchmarks/sha/sha.c:123]   --->   Operation 165 'br' <Predicate = true> <Delay = 0.00>

State 16 <SV = 9> <Delay = 1.87>
ST_16 : Operation 166 [1/1] (0.00ns)   --->   "%E_3 = phi i32 [ %E_7, %9 ], [ %E_2, %.preheader.preheader ]"   --->   Operation 166 'phi' 'E_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 167 [1/1] (0.00ns)   --->   "%E_7 = phi i32 [ %D_4, %9 ], [ %E_6, %.preheader.preheader ]"   --->   Operation 167 'phi' 'E_7' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "%D_4 = phi i32 [ %C_4, %9 ], [ %D_3, %.preheader.preheader ]"   --->   Operation 168 'phi' 'D_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 169 [1/1] (0.00ns)   --->   "%B_3 = phi i32 [ %B_7, %9 ], [ %B_2, %.preheader.preheader ]"   --->   Operation 169 'phi' 'B_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 170 [1/1] (0.00ns)   --->   "%B_7 = phi i32 [ %temp_3, %9 ], [ %B_6, %.preheader.preheader ]"   --->   Operation 170 'phi' 'B_7' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 171 [1/1] (0.00ns)   --->   "%i_5 = phi i7 [ %i_10, %9 ], [ 60, %.preheader.preheader ]"   --->   Operation 171 'phi' 'i_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 172 [1/1] (0.71ns)   --->   "%icmp_ln127 = icmp eq i7 %i_5, -48" [benchmarks/sha/sha.c:127]   --->   Operation 172 'icmp' 'icmp_ln127' <Predicate = true> <Delay = 0.71> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 173 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20) nounwind"   --->   Operation 173 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 174 [1/1] (0.00ns)   --->   "br i1 %icmp_ln127, label %10, label %9" [benchmarks/sha/sha.c:127]   --->   Operation 174 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 175 [1/1] (0.00ns)   --->   "%trunc_ln129 = trunc i32 %B_7 to i27" [benchmarks/sha/sha.c:129]   --->   Operation 175 'trunc' 'trunc_ln129' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 176 [1/1] (0.00ns)   --->   "%lshr_ln3 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %B_7, i32 27, i32 31)" [benchmarks/sha/sha.c:129]   --->   Operation 176 'partselect' 'lshr_ln3' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 177 [1/1] (0.00ns)   --->   "%or_ln3 = call i32 @_ssdm_op_BitConcatenate.i32.i27.i5(i27 %trunc_ln129, i5 %lshr_ln3)" [benchmarks/sha/sha.c:129]   --->   Operation 177 'bitconcatenate' 'or_ln3' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node xor_ln129_1)   --->   "%xor_ln129 = xor i32 %E_7, %B_3" [benchmarks/sha/sha.c:129]   --->   Operation 178 'xor' 'xor_ln129' <Predicate = (!icmp_ln127)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 179 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln129_1 = xor i32 %xor_ln129, %D_4" [benchmarks/sha/sha.c:129]   --->   Operation 179 'xor' 'xor_ln129_1' <Predicate = (!icmp_ln127)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln129 = zext i7 %i_5 to i64" [benchmarks/sha/sha.c:129]   --->   Operation 180 'zext' 'zext_ln129' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 181 [1/1] (0.00ns)   --->   "%W_addr_9 = getelementptr inbounds [80 x i32]* %W, i64 0, i64 %zext_ln129" [benchmarks/sha/sha.c:129]   --->   Operation 181 'getelementptr' 'W_addr_9' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 182 [2/2] (1.29ns)   --->   "%W_load_7 = load i32* %W_addr_9, align 4" [benchmarks/sha/sha.c:129]   --->   Operation 182 'load' 'W_load_7' <Predicate = (!icmp_ln127)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_16 : Operation 183 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln129_1 = add i32 -899497514, %or_ln3" [benchmarks/sha/sha.c:129]   --->   Operation 183 'add' 'add_ln129_1' <Predicate = (!icmp_ln127)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 184 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln129_2 = add i32 %add_ln129_1, %xor_ln129_1" [benchmarks/sha/sha.c:129]   --->   Operation 184 'add' 'add_ln129_2' <Predicate = (!icmp_ln127)> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln129_1 = trunc i32 %B_3 to i2" [benchmarks/sha/sha.c:129]   --->   Operation 185 'trunc' 'trunc_ln129_1' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 186 [1/1] (0.00ns)   --->   "%lshr_ln129_1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_3, i32 2, i32 31)" [benchmarks/sha/sha.c:129]   --->   Operation 186 'partselect' 'lshr_ln129_1' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 187 [1/1] (0.00ns)   --->   "%C_4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %trunc_ln129_1, i30 %lshr_ln129_1)" [benchmarks/sha/sha.c:129]   --->   Operation 187 'bitconcatenate' 'C_4' <Predicate = (!icmp_ln127)> <Delay = 0.00>
ST_16 : Operation 188 [1/1] (0.85ns)   --->   "%i_10 = add i7 1, %i_5" [benchmarks/sha/sha.c:127]   --->   Operation 188 'add' 'i_10' <Predicate = (!icmp_ln127)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 189 [1/1] (1.14ns)   --->   "%add_ln132 = add i32 %A, %B_7" [benchmarks/sha/sha.c:132]   --->   Operation 189 'add' 'add_ln132' <Predicate = (icmp_ln127)> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 190 [1/1] (0.73ns)   --->   "store i32 %add_ln132, i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 0), align 16" [benchmarks/sha/sha.c:132]   --->   Operation 190 'store' <Predicate = (icmp_ln127)> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_16 : Operation 191 [1/1] (1.14ns)   --->   "%add_ln133 = add i32 %B, %B_3" [benchmarks/sha/sha.c:133]   --->   Operation 191 'add' 'add_ln133' <Predicate = (icmp_ln127)> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 192 [1/1] (0.73ns)   --->   "store i32 %add_ln133, i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 1), align 4" [benchmarks/sha/sha.c:133]   --->   Operation 192 'store' <Predicate = (icmp_ln127)> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_16 : Operation 193 [1/1] (1.14ns)   --->   "%add_ln134 = add i32 %C, %D_4" [benchmarks/sha/sha.c:134]   --->   Operation 193 'add' 'add_ln134' <Predicate = (icmp_ln127)> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 194 [1/1] (1.14ns)   --->   "%add_ln135 = add i32 %D, %E_7" [benchmarks/sha/sha.c:135]   --->   Operation 194 'add' 'add_ln135' <Predicate = (icmp_ln127)> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 10> <Delay = 2.20>
ST_17 : Operation 195 [1/2] (1.29ns)   --->   "%W_load_7 = load i32* %W_addr_9, align 4" [benchmarks/sha/sha.c:129]   --->   Operation 195 'load' 'W_load_7' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_17 : Operation 196 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln129 = add i32 %W_load_7, %E_3" [benchmarks/sha/sha.c:129]   --->   Operation 196 'add' 'add_ln129' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 197 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%temp_3 = add i32 %add_ln129_2, %add_ln129" [benchmarks/sha/sha.c:129]   --->   Operation 197 'add' 'temp_3' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 198 [1/1] (0.00ns)   --->   "br label %.preheader" [benchmarks/sha/sha.c:127]   --->   Operation 198 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 10> <Delay = 1.14>
ST_18 : Operation 199 [1/1] (0.73ns)   --->   "store i32 %add_ln134, i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 2), align 8" [benchmarks/sha/sha.c:134]   --->   Operation 199 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_18 : Operation 200 [1/1] (0.73ns)   --->   "store i32 %add_ln135, i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 3), align 4" [benchmarks/sha/sha.c:135]   --->   Operation 200 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_18 : Operation 201 [1/1] (1.14ns)   --->   "%add_ln136 = add i32 %E, %E_3" [benchmarks/sha/sha.c:136]   --->   Operation 201 'add' 'add_ln136' <Predicate = true> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 11> <Delay = 0.73>
ST_19 : Operation 202 [1/1] (0.73ns)   --->   "store i32 %add_ln136, i32* getelementptr inbounds ([5 x i32]* @sha_info_digest, i64 0, i64 4), align 16" [benchmarks/sha/sha.c:136]   --->   Operation 202 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5> <RAM>
ST_19 : Operation 203 [1/1] (0.00ns)   --->   "ret void" [benchmarks/sha/sha.c:137]   --->   Operation 203 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 0.736ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', benchmarks/sha/sha.c:101) [6]  (0.736 ns)

 <State 2>: 0.825ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', benchmarks/sha/sha.c:101) [6]  (0 ns)
	'add' operation ('i', benchmarks/sha/sha.c:101) [9]  (0.825 ns)

 <State 3>: 2.03ns
The critical path consists of the following:
	'load' operation ('sha_info_data_load', benchmarks/sha/sha.c:103) on array 'sha_info_data' [14]  (0.73 ns)
	'store' operation ('store_ln103', benchmarks/sha/sha.c:103) of variable 'sha_info_data_load', benchmarks/sha/sha.c:103 on array 'W', benchmarks/sha/sha.c:99 [16]  (1.3 ns)

 <State 4>: 2.15ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', benchmarks/sha/sha.c:105) [21]  (0 ns)
	'add' operation ('add_ln107', benchmarks/sha/sha.c:107) [26]  (0.856 ns)
	'getelementptr' operation ('W_addr_1', benchmarks/sha/sha.c:107) [28]  (0 ns)
	'load' operation ('W_load', benchmarks/sha/sha.c:107) on array 'W', benchmarks/sha/sha.c:99 [29]  (1.3 ns)

 <State 5>: 2.15ns
The critical path consists of the following:
	'add' operation ('add_ln107_2', benchmarks/sha/sha.c:107) [34]  (0.856 ns)
	'getelementptr' operation ('W_addr_3', benchmarks/sha/sha.c:107) [36]  (0 ns)
	'load' operation ('W_load_2', benchmarks/sha/sha.c:107) on array 'W', benchmarks/sha/sha.c:99 [37]  (1.3 ns)

 <State 6>: 2.88ns
The critical path consists of the following:
	'load' operation ('W_load_2', benchmarks/sha/sha.c:107) on array 'W', benchmarks/sha/sha.c:99 [37]  (1.3 ns)
	'xor' operation ('xor_ln107_1', benchmarks/sha/sha.c:107) [43]  (0 ns)
	'xor' operation ('xor_ln107_2', benchmarks/sha/sha.c:107) [44]  (0.289 ns)
	'store' operation ('store_ln107', benchmarks/sha/sha.c:107) of variable 'xor_ln107_2', benchmarks/sha/sha.c:107 on array 'W', benchmarks/sha/sha.c:99 [47]  (1.3 ns)

 <State 7>: 0.73ns
The critical path consists of the following:
	'load' operation ('A', benchmarks/sha/sha.c:109) on array 'sha_info_digest' [51]  (0.73 ns)

 <State 8>: 0.73ns
The critical path consists of the following:
	'load' operation ('B', benchmarks/sha/sha.c:110) on array 'sha_info_digest' [52]  (0.73 ns)

 <State 9>: 0.736ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('E') with incoming values : ('C', benchmarks/sha/sha.c:111) ('D', benchmarks/sha/sha.c:112) ('E', benchmarks/sha/sha.c:113) ('C', benchmarks/sha/sha.c:117) [58]  (0.736 ns)

 <State 10>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', benchmarks/sha/sha.c:115) [63]  (0 ns)
	'getelementptr' operation ('W_addr_6', benchmarks/sha/sha.c:117) [77]  (0 ns)
	'load' operation ('W_load_4', benchmarks/sha/sha.c:117) on array 'W', benchmarks/sha/sha.c:99 [78]  (1.3 ns)

 <State 11>: 2.2ns
The critical path consists of the following:
	'load' operation ('W_load_4', benchmarks/sha/sha.c:117) on array 'W', benchmarks/sha/sha.c:99 [78]  (1.3 ns)
	'add' operation ('add_ln117', benchmarks/sha/sha.c:117) [79]  (0 ns)
	'add' operation ('temp', benchmarks/sha/sha.c:117) [82]  (0.907 ns)

 <State 12>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', benchmarks/sha/sha.c:119) [95]  (0 ns)
	'getelementptr' operation ('W_addr_7', benchmarks/sha/sha.c:121) [106]  (0 ns)
	'load' operation ('W_load_5', benchmarks/sha/sha.c:121) on array 'W', benchmarks/sha/sha.c:99 [107]  (1.3 ns)

 <State 13>: 2.2ns
The critical path consists of the following:
	'load' operation ('W_load_5', benchmarks/sha/sha.c:121) on array 'W', benchmarks/sha/sha.c:99 [107]  (1.3 ns)
	'add' operation ('add_ln121', benchmarks/sha/sha.c:121) [108]  (0 ns)
	'add' operation ('temp', benchmarks/sha/sha.c:121) [111]  (0.907 ns)

 <State 14>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', benchmarks/sha/sha.c:123) [125]  (0 ns)
	'getelementptr' operation ('W_addr_8', benchmarks/sha/sha.c:125) [138]  (0 ns)
	'load' operation ('W_load_6', benchmarks/sha/sha.c:125) on array 'W', benchmarks/sha/sha.c:99 [139]  (1.3 ns)

 <State 15>: 2.2ns
The critical path consists of the following:
	'load' operation ('W_load_6', benchmarks/sha/sha.c:125) on array 'W', benchmarks/sha/sha.c:99 [139]  (1.3 ns)
	'add' operation ('add_ln125', benchmarks/sha/sha.c:125) [140]  (0 ns)
	'add' operation ('temp', benchmarks/sha/sha.c:125) [143]  (0.907 ns)

 <State 16>: 1.87ns
The critical path consists of the following:
	'phi' operation ('B') with incoming values : ('A', benchmarks/sha/sha.c:109) ('B', benchmarks/sha/sha.c:110) ('temp', benchmarks/sha/sha.c:117) ('temp', benchmarks/sha/sha.c:121) ('temp', benchmarks/sha/sha.c:125) ('temp', benchmarks/sha/sha.c:129) [155]  (0 ns)
	'add' operation ('add_ln133', benchmarks/sha/sha.c:133) [182]  (1.14 ns)
	'store' operation ('store_ln133', benchmarks/sha/sha.c:133) of variable 'add_ln133', benchmarks/sha/sha.c:133 on array 'sha_info_digest' [183]  (0.73 ns)

 <State 17>: 2.2ns
The critical path consists of the following:
	'load' operation ('W_load_7', benchmarks/sha/sha.c:129) on array 'W', benchmarks/sha/sha.c:99 [169]  (1.3 ns)
	'add' operation ('add_ln129', benchmarks/sha/sha.c:129) [170]  (0 ns)
	'add' operation ('temp', benchmarks/sha/sha.c:129) [173]  (0.907 ns)

 <State 18>: 1.14ns
The critical path consists of the following:
	'add' operation ('add_ln136', benchmarks/sha/sha.c:136) [188]  (1.14 ns)

 <State 19>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln136', benchmarks/sha/sha.c:136) of variable 'add_ln136', benchmarks/sha/sha.c:136 on array 'sha_info_digest' [189]  (0.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
