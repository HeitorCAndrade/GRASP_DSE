
****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:06:45 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29925 ; free virtual = 46417
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29925 ; free virtual = 46417
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29912 ; free virtual = 46406
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29903 ; free virtual = 46398
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29873 ; free virtual = 46370
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29872 ; free virtual = 46369
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.56 seconds; current allocated memory: 137.150 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 137.951 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 139.374 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29859 ; free virtual = 46360
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 14.92 seconds; peak allocated memory: 139.374 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:07:00 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:07:01 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46414
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46414
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46395
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29870 ; free virtual = 46367
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

more than one sub loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46366
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.82 seconds; current allocated memory: 137.237 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 138.045 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 139.598 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29856 ; free virtual = 46358
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 15.2 seconds; peak allocated memory: 139.598 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:07:16 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:07:18 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46414
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46414
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46403
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46395
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29871 ; free virtual = 46367
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

more than one sub loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29869 ; free virtual = 46366
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.79 seconds; current allocated memory: 137.239 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 138.047 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 139.600 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29856 ; free virtual = 46357
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 15.17 seconds; peak allocated memory: 139.600 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:07:33 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:07:34 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46414
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46414
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46395
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29869 ; free virtual = 46366
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29860 ; free virtual = 46358
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.85 seconds; current allocated memory: 147.327 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 147.823 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 148.413 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 149.131 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 150.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 153.469 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29840 ; free virtual = 46343
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 15.74 seconds; peak allocated memory: 153.469 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:07:50 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:07:51 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29906 ; free virtual = 46401
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29898 ; free virtual = 46394
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46365
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29859 ; free virtual = 46357
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.86 seconds; current allocated memory: 147.327 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 147.824 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 148.413 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 149.131 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 150.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 153.469 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29838 ; free virtual = 46341
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 15.74 seconds; peak allocated memory: 153.469 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:08:07 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:08:09 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29907 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46394
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46365
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

more than one sub loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29859 ; free virtual = 46356
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.88 seconds; current allocated memory: 147.335 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 147.828 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 148.472 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 149.195 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 150.212 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 153.602 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29839 ; free virtual = 46342
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 15.9 seconds; peak allocated memory: 153.602 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:08:25 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:08:26 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46414
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46414
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29907 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46395
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46365
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

more than one sub loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29860 ; free virtual = 46357
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.9 seconds; current allocated memory: 147.333 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 147.830 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 148.470 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 149.192 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 150.209 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 153.599 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29839 ; free virtual = 46342
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 15.91 seconds; peak allocated memory: 153.599 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:08:42 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:08:44 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29906 ; free virtual = 46401
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29898 ; free virtual = 46394
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46365
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

more than one sub loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29859 ; free virtual = 46356
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.88 seconds; current allocated memory: 147.967 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 148.464 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('data_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34->./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) on array 'data_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'data_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 7.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 149.345 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 150.404 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 151.421 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 155.217 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29834 ; free virtual = 46338
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 16.12 seconds; peak allocated memory: 155.217 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:09:00 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:09:01 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29906 ; free virtual = 46401
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29898 ; free virtual = 46394
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46365
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29851 ; free virtual = 46348
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.94 seconds; current allocated memory: 158.003 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 158.500 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 159.207 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 159.918 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 160.448 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 161.146 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 162.213 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 165.471 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 169.654 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29819 ; free virtual = 46325
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 16.69 seconds; peak allocated memory: 169.654 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:09:18 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:09:19 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29907 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46395
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29869 ; free virtual = 46366
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29842 ; free virtual = 46340
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.95 seconds; current allocated memory: 157.983 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 158.481 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 159.189 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 159.900 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 160.430 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 161.146 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 162.213 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 165.452 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 169.636 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29819 ; free virtual = 46325
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 16.68 seconds; peak allocated memory: 169.636 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:09:36 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:09:38 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46403
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46395
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46366
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

the outer loop is not a perfect loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29851 ; free virtual = 46349
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.92 seconds; current allocated memory: 158.017 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 158.530 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 159.210 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 159.923 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 160.469 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 161.225 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 162.257 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 165.534 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 169.767 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29820 ; free virtual = 46326
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 16.7 seconds; peak allocated memory: 169.767 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:09:54 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:09:56 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46415
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46415
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46403
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46396
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29869 ; free virtual = 46367
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61:6) in function 'SgdLR_sw' : 

the outer loop is not a perfect loop.
INFO: [XFORM 203-541] Flattening a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw'.
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29853 ; free virtual = 46351
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_5', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.92 seconds; current allocated memory: 158.008 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 158.519 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 159.207 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 159.920 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 160.466 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 161.223 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 162.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 165.530 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 169.764 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29821 ; free virtual = 46328
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 16.71 seconds; peak allocated memory: 169.764 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:10:13 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:10:15 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46415
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46415
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46403
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46396
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29870 ; free virtual = 46367
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29844 ; free virtual = 46342
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_12', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_9', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.98 seconds; current allocated memory: 168.256 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 168.768 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 169.464 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 170.178 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 170.558 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 170.971 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 171.461 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 172.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 173.237 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 176.543 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 180.233 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 183.090 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29806 ; free virtual = 46314
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 17.26 seconds; peak allocated memory: 183.090 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:10:32 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:10:34 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46403
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46395
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [XFORM 203-602] Inlining function 'Sigmoid' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29869 ; free virtual = 46366
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29843 ; free virtual = 46341
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_12', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_9', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14 seconds; current allocated memory: 168.253 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 168.765 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 169.465 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 170.176 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 170.560 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 170.972 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 171.462 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 172.169 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 173.239 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 176.544 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 180.235 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 183.090 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 143.47 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29805 ; free virtual = 46313
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 17.29 seconds; peak allocated memory: 183.090 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:10:51 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:10:53 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29920 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46403
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46396
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29869 ; free virtual = 46366
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29834 ; free virtual = 46332
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_12', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_9', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.08 seconds; current allocated memory: 178.047 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 178.561 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 178.982 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 179.445 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 180.127 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 180.836 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 181.230 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 181.681 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 181.995 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 182.581 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 183.650 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 186.580 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 189.640 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 193.346 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 195.955 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:18 ; elapsed = 00:00:18 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29794 ; free virtual = 46303
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 17.82 seconds; peak allocated memory: 195.955 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:11:11 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:11:13 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46416
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29922 ; free virtual = 46416
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29909 ; free virtual = 46405
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29901 ; free virtual = 46398
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29870 ; free virtual = 46368
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:15 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29827 ; free virtual = 46325
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_12', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_9', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.1 seconds; current allocated memory: 178.052 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 178.565 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 178.987 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 179.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 180.129 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 180.839 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 181.235 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 181.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 181.997 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 182.583 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 183.653 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 186.584 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 189.646 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 193.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 195.960 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:18 ; elapsed = 00:00:18 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29787 ; free virtual = 46296
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 17.83 seconds; peak allocated memory: 195.960 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:11:31 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:11:32 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29919 ; free virtual = 46412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29919 ; free virtual = 46412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29906 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29898 ; free virtual = 46394
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46366
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29833 ; free virtual = 46331
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_12', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_9', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.1 seconds; current allocated memory: 178.094 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 178.605 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 179.012 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 179.477 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 180.186 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 180.895 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 181.287 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 181.737 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 182.048 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 182.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 183.693 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 186.622 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 189.713 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 193.417 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 195.999 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:18 ; elapsed = 00:00:18 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29791 ; free virtual = 46301
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 17.81 seconds; peak allocated memory: 195.999 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:11:50 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:11:52 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46415
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29921 ; free virtual = 46415
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29908 ; free virtual = 46404
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29900 ; free virtual = 46396
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 8.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 16.
INFO: [XFORM 203-501] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' partially with a factor of 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29868 ; free virtual = 46366
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29834 ; free virtual = 46332
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
WARNING: [SCHED 204-68] The II Violation in module 'dotProduct' (Loop: DOT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'add' operation ('add_ln1192_12', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) and 'add' operation ('add_ln1192_9', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18).
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 4, Depth = 8.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.1 seconds; current allocated memory: 178.085 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 178.600 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 179.006 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 179.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 11.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 180.178 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 180.889 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'UPDATE'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 8, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 181.284 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 181.733 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 182.044 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 182.633 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 183.688 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 186.619 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 189.711 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 0.32 seconds; current allocated memory: 193.412 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 195.995 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:18 ; elapsed = 00:00:18 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29792 ; free virtual = 46302
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 17.84 seconds; peak allocated memory: 195.995 MB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:12:09 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:12:11 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29918 ; free virtual = 46412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29918 ; free virtual = 46412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29905 ; free virtual = 46401
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29898 ; free virtual = 46394
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:04:12 ; elapsed = 00:04:11 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29798 ; free virtual = 46297
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:07:25 ; elapsed = 00:07:25 . Memory (MB): peak = 2015.965 ; gain = 1611.590 ; free physical = 28829 ; free virtual = 45331
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 556.01 seconds; current allocated memory: 404.536 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 51.97 seconds; current allocated memory: 455.238 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 38.27 seconds; current allocated memory: 459.884 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 460.336 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 51.36 seconds; current allocated memory: 487.173 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 34.69 seconds; current allocated memory: 524.792 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 84.86 seconds; current allocated memory: 556.465 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 48.51 seconds; current allocated memory: 607.100 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 30.28 seconds; current allocated memory: 610.784 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 11.68 seconds; current allocated memory: 623.298 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 15.78 seconds; current allocated memory: 710.933 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 49.92 seconds; current allocated memory: 889.003 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 7.36 seconds; current allocated memory: 944.856 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 45.76 seconds; current allocated memory: 1.142 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 40.72 seconds; current allocated memory: 1.289 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:17:28 ; elapsed = 00:18:06 . Memory (MB): peak = 2175.977 ; gain = 1771.602 ; free physical = 28116 ; free virtual = 45125
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 1086.04 seconds; peak allocated memory: 1.289 GB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:30:17 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:30:19 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29919 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29919 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29906 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29897 ; free virtual = 46395
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:04:04 ; elapsed = 00:04:03 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29788 ; free virtual = 46289
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:07:18 ; elapsed = 00:07:18 . Memory (MB): peak = 2013.965 ; gain = 1609.590 ; free physical = 28831 ; free virtual = 45334
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 548.91 seconds; current allocated memory: 404.541 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 53.32 seconds; current allocated memory: 455.246 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 39.58 seconds; current allocated memory: 459.892 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 460.344 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 51.36 seconds; current allocated memory: 487.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 35.67 seconds; current allocated memory: 524.798 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 85.8 seconds; current allocated memory: 556.471 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 50.15 seconds; current allocated memory: 607.108 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 31.43 seconds; current allocated memory: 610.793 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 11.53 seconds; current allocated memory: 623.307 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 15.61 seconds; current allocated memory: 710.954 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 51.68 seconds; current allocated memory: 889.022 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 7.37 seconds; current allocated memory: 944.862 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 46.9 seconds; current allocated memory: 1.142 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 42.07 seconds; current allocated memory: 1.289 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:17:32 ; elapsed = 00:18:10 . Memory (MB): peak = 2206.465 ; gain = 1802.090 ; free physical = 28120 ; free virtual = 45130
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 1090.14 seconds; peak allocated memory: 1.289 GB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 21:48:29 2022...
None
None
None
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 1451, 'DSP': 17, 'LUT': 4013, 'BRAM': 2, 'resources': 16448.22, 'latency': 253957511}
set_directive_pipeline "dotProduct/DOT"
None
None
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 1544, 'DSP': 17, 'LUT': 4092, 'BRAM': 2, 'resources': 16699.22, 'latency': 184905001}
set_directive_pipeline "dotProduct/DOT"
None
None
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 1544, 'DSP': 17, 'LUT': 4092, 'BRAM': 2, 'resources': 16699.22, 'latency': 184905001}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
None
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 1938, 'DSP': 31, 'LUT': 4992, 'BRAM': 2, 'resources': 23732.74, 'latency': 173430011}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
None
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 1938, 'DSP': 31, 'LUT': 4992, 'BRAM': 2, 'resources': 23732.74, 'latency': 173430011}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2084, 'DSP': 31, 'LUT': 5103, 'BRAM': 2, 'resources': 24100.74, 'latency': 104377501}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
None
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2084, 'DSP': 31, 'LUT': 5103, 'BRAM': 2, 'resources': 24100.74, 'latency': 104377501}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 8 "computeGradient/GRAD"
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2026, 'DSP': 45, 'LUT': 5406, 'BRAM': 2, 'resources': 29488.26, 'latency': 92857501}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2110, 'DSP': 61, 'LUT': 6277, 'BRAM': 2, 'resources': 36845.14, 'latency': 92880011}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
None
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2110, 'DSP': 61, 'LUT': 6277, 'BRAM': 2, 'resources': 36845.14, 'latency': 92880011}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2128, 'DSP': 61, 'LUT': 6340, 'BRAM': 2, 'resources': 36989.14, 'latency': 46845001}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
None
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2128, 'DSP': 61, 'LUT': 6340, 'BRAM': 2, 'resources': 36989.14, 'latency': 46845001}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2634, 'DSP': 89, 'LUT': 7251, 'BRAM': 2, 'resources': 48996.18000000001, 'latency': 47025011}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
None
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2634, 'DSP': 89, 'LUT': 7251, 'BRAM': 2, 'resources': 48996.18000000001, 'latency': 47025011}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2970, 'DSP': 89, 'LUT': 7799, 'BRAM': 2, 'resources': 50428.18000000001, 'latency': 47047505}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
None
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2970, 'DSP': 89, 'LUT': 7799, 'BRAM': 2, 'resources': 50428.18000000001, 'latency': 47047505}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2970, 'DSP': 89, 'LUT': 7799, 'BRAM': 2, 'resources': 50428.18000000001, 'latency': 47047505}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
None
None
None
Running Synthesis...
Synthesis ended
{'FF': 2970, 'DSP': 89, 'LUT': 7799, 'BRAM': 2, 'resources': 50428.18000000001, 'latency': 47047505}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
None
None
Running Synthesis...
Synthesis ended
{'FF': 108080, 'DSP': 8201, 'LUT': 280783, 'BRAM': 2, 'resources': 3505662.3400000003, 'latency': 46777505}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
None
None
Running Synthesis...
Synthesis ended
{'FF': 108080, 'DSP': 8201, 'LUT': 280783, 'BRAM': 2, 'resources': 3505662.3400000003, 'latency': 46777505}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
None

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 21:48:31 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29917 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29917 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29903 ; free virtual = 46401
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29895 ; free virtual = 46394
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:04:23 ; elapsed = 00:04:23 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29794 ; free virtual = 46296
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:07:47 ; elapsed = 00:07:47 . Memory (MB): peak = 1949.965 ; gain = 1545.590 ; free physical = 28824 ; free virtual = 45328
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 578.23 seconds; current allocated memory: 412.766 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 53.6 seconds; current allocated memory: 463.453 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 39.58 seconds; current allocated memory: 468.084 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.25 seconds; current allocated memory: 468.538 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 51.89 seconds; current allocated memory: 495.389 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 35.91 seconds; current allocated memory: 533.009 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 86.53 seconds; current allocated memory: 564.681 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 49.73 seconds; current allocated memory: 615.317 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 33.63 seconds; current allocated memory: 622.036 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 16.81 seconds; current allocated memory: 643.810 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 18.5 seconds; current allocated memory: 731.665 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 51.12 seconds; current allocated memory: 909.718 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 7.32 seconds; current allocated memory: 965.562 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 47.14 seconds; current allocated memory: 1.163 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 47.8 seconds; current allocated memory: 1.321 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:18:23 ; elapsed = 00:19:00 . Memory (MB): peak = 2292.980 ; gain = 1888.605 ; free physical = 28048 ; free virtual = 45078
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 1140.61 seconds; peak allocated memory: 1.321 GB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 22:07:31 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 22:07:33 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29916 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29916 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29903 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29894 ; free virtual = 46394
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:04:09 ; elapsed = 00:04:09 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29788 ; free virtual = 46292
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:07:31 ; elapsed = 00:07:31 . Memory (MB): peak = 2012.965 ; gain = 1608.590 ; free physical = 28824 ; free virtual = 45330
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 562.49 seconds; current allocated memory: 412.757 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 53.38 seconds; current allocated memory: 463.448 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 38.75 seconds; current allocated memory: 468.078 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 468.532 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 51.13 seconds; current allocated memory: 495.382 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 34.68 seconds; current allocated memory: 533.001 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('grad_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'grad_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'grad_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 84.69 seconds; current allocated memory: 564.674 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 48.51 seconds; current allocated memory: 615.311 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 31.5 seconds; current allocated memory: 622.029 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 16.48 seconds; current allocated memory: 643.803 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 18.31 seconds; current allocated memory: 731.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 50.79 seconds; current allocated memory: 909.696 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 7.45 seconds; current allocated memory: 965.543 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 46.1 seconds; current allocated memory: 1.163 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 46.57 seconds; current allocated memory: 1.321 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:17:55 ; elapsed = 00:18:33 . Memory (MB): peak = 2292.980 ; gain = 1888.605 ; free physical = 28048 ; free virtual = 45079
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 1113.65 seconds; peak allocated memory: 1.321 GB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 22:26:06 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 22:26:08 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
ERROR: [HLS 200-101] 'set_directive_array_partition': Not enough required positional arguments.
FORMAT
  set_directive_array_partition [OPTIONS] <location> <variable>
     location <string>  (required)
     variable <string>  (required)
    -dim <int> (default: 1)
    -factor <int>
    -type (block | cyclic | *complete*)

command 'set_directive_array_partition' returned error code
    while executing
"set_directive_array_partition -type block -factor 8 -dim 1 gradient"
    (file "directives.tcl" line 11)
    invoked from within
"source "directives.tcl""
    (file "./script.tcl" line 13)
    invoked from within
"source ./script.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel \#0 [list source $arg] "

INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 22:26:10 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 22:26:11 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29915 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29915 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29902 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29894 ; free virtual = 46395
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 16.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:36 ; elapsed = 00:11:36 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29714 ; free virtual = 46222
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:37 ; elapsed = 00:25:39 . Memory (MB): peak = 7709.965 ; gain = 7305.590 ; free physical = 23146 ; free virtual = 39658
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1649.02 seconds; current allocated memory: 2.833 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 110.37 seconds; current allocated memory: 2.882 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 96.23 seconds; current allocated memory: 2.887 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.66 seconds; current allocated memory: 2.887 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.68 seconds; current allocated memory: 2.911 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 73.34 seconds; current allocated memory: 2.944 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 133.07 seconds; current allocated memory: 2.973 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 85.71 seconds; current allocated memory: 3.016 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 172.34 seconds; current allocated memory: 3.112 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 396.45 seconds; current allocated memory: 3.237 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 246.36 seconds; current allocated memory: 3.323 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 107.08 seconds; current allocated memory: 3.497 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.76 seconds; current allocated memory: 1.602 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 85.11 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 287.45 seconds; current allocated memory: 3.458 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:03:08 ; elapsed = 01:03:59 . Memory (MB): peak = 17288.996 ; gain = 16884.621 ; free physical = 11589 ; free virtual = 30338
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3843.88 seconds; peak allocated memory: 3.497 GB.
INFO: [Common 17-206] Exiting vivado_hls at Tue Jun 14 23:30:15 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Tue Jun 14 23:30:18 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29911 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29911 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29898 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29889 ; free virtual = 46394
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 32.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:18 ; elapsed = 00:11:18 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29665 ; free virtual = 46176
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:26 ; elapsed = 00:25:27 . Memory (MB): peak = 7724.965 ; gain = 7320.590 ; free physical = 23139 ; free virtual = 39654
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1638.76 seconds; current allocated memory: 2.833 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 112.06 seconds; current allocated memory: 2.882 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 97.91 seconds; current allocated memory: 2.887 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.67 seconds; current allocated memory: 2.887 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.76 seconds; current allocated memory: 2.911 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 74.42 seconds; current allocated memory: 2.944 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 133.48 seconds; current allocated memory: 2.973 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 86.99 seconds; current allocated memory: 3.016 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 174.97 seconds; current allocated memory: 3.112 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 399.88 seconds; current allocated memory: 3.237 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 250.93 seconds; current allocated memory: 3.323 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 109.27 seconds; current allocated memory: 3.497 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.12 seconds; current allocated memory: 1.602 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 88.13 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 287.44 seconds; current allocated memory: 3.458 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:03:20 ; elapsed = 01:04:12 . Memory (MB): peak = 17288.996 ; gain = 16884.621 ; free physical = 11592 ; free virtual = 30345
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3856.64 seconds; peak allocated memory: 3.497 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 00:34:34 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 00:34:37 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29907 ; free virtual = 46413
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29907 ; free virtual = 46413
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29894 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29886 ; free virtual = 46395
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 64.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:32 ; elapsed = 00:11:31 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29560 ; free virtual = 46074
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:32 ; elapsed = 00:25:34 . Memory (MB): peak = 7644.965 ; gain = 7240.590 ; free physical = 23135 ; free virtual = 39654
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1644.31 seconds; current allocated memory: 2.833 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 112.52 seconds; current allocated memory: 2.883 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 97.92 seconds; current allocated memory: 2.887 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.67 seconds; current allocated memory: 2.888 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.98 seconds; current allocated memory: 2.911 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 74.12 seconds; current allocated memory: 2.945 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 132.78 seconds; current allocated memory: 2.973 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 86.89 seconds; current allocated memory: 3.016 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 170.83 seconds; current allocated memory: 3.112 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 398.72 seconds; current allocated memory: 3.238 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 249.3 seconds; current allocated memory: 3.324 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 109.06 seconds; current allocated memory: 3.498 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.49 seconds; current allocated memory: 1.602 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 89.89 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 288.66 seconds; current allocated memory: 3.458 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:03:23 ; elapsed = 01:04:14 . Memory (MB): peak = 17229.000 ; gain = 16824.625 ; free physical = 11575 ; free virtual = 30331
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3858.35 seconds; peak allocated memory: 3.498 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 01:38:55 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 01:38:58 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29905 ; free virtual = 46414
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29905 ; free virtual = 46414
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29891 ; free virtual = 46402
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29882 ; free virtual = 46395
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 128.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:33 ; elapsed = 00:11:33 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29321 ; free virtual = 45839
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:40 ; elapsed = 00:25:41 . Memory (MB): peak = 7709.965 ; gain = 7305.590 ; free physical = 23141 ; free virtual = 39664
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1653.32 seconds; current allocated memory: 2.834 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 113.55 seconds; current allocated memory: 2.884 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 99.8 seconds; current allocated memory: 2.888 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 2.889 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 53.49 seconds; current allocated memory: 2.912 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 75.95 seconds; current allocated memory: 2.946 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 134.92 seconds; current allocated memory: 2.974 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 87.76 seconds; current allocated memory: 3.017 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 174.5 seconds; current allocated memory: 3.113 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 403.69 seconds; current allocated memory: 3.239 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 253.58 seconds; current allocated memory: 3.324 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 110.88 seconds; current allocated memory: 3.498 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 83.5 seconds; current allocated memory: 1.603 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 88.3 seconds; current allocated memory: 1.806 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 290.38 seconds; current allocated memory: 3.459 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:03:59 ; elapsed = 01:04:50 . Memory (MB): peak = 17288.996 ; gain = 16884.621 ; free physical = 11583 ; free virtual = 30344
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3894.45 seconds; peak allocated memory: 3.498 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 02:43:52 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 02:43:55 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29899 ; free virtual = 46412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29885 ; free virtual = 46400
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29878 ; free virtual = 46394
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 256.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:13:22 ; elapsed = 00:13:22 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29583 ; free virtual = 46107
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:26:39 ; elapsed = 00:26:40 . Memory (MB): peak = 7711.965 ; gain = 7307.590 ; free physical = 23120 ; free virtual = 39648
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1714.14 seconds; current allocated memory: 2.841 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 124.55 seconds; current allocated memory: 2.891 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 110.14 seconds; current allocated memory: 2.895 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.76 seconds; current allocated memory: 2.896 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 53.17 seconds; current allocated memory: 2.919 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 83.92 seconds; current allocated memory: 2.953 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 141.87 seconds; current allocated memory: 2.982 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 95.82 seconds; current allocated memory: 3.024 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 182.97 seconds; current allocated memory: 3.120 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 434.59 seconds; current allocated memory: 3.246 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 284.69 seconds; current allocated memory: 3.332 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 123.41 seconds; current allocated memory: 3.506 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.15 seconds; current allocated memory: 1.611 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 96.69 seconds; current allocated memory: 1.813 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 296.31 seconds; current allocated memory: 3.467 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:07:49 ; elapsed = 01:08:41 . Memory (MB): peak = 17288.996 ; gain = 16884.621 ; free physical = 11563 ; free virtual = 30329
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 4125.24 seconds; peak allocated memory: 3.506 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 03:52:40 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 03:52:42 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29893 ; free virtual = 46410
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29893 ; free virtual = 46410
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29881 ; free virtual = 46400
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29872 ; free virtual = 46392
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 512.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.256' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.257' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.258' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.259' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.260' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.261' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.262' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.263' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.264' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.265' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.266' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.267' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.268' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.269' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.270' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.271' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.272' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.273' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.274' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.275' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.276' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.277' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.278' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.279' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.280' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.281' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.282' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.283' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.284' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.285' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.286' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.287' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.288' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.289' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.290' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.291' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.292' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.293' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.294' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.295' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.296' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.297' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.298' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.299' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.300' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.301' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.302' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.303' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.304' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.305' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.306' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.307' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.308' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.309' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.310' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.311' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.312' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.313' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.314' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.315' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.316' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.317' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.318' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.319' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.320' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.321' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.322' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.323' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.324' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.325' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.326' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.327' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.328' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.329' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.330' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.331' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.332' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.333' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.334' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.335' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.336' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.337' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.338' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.339' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.340' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.341' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.342' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.343' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.344' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.345' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.346' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.347' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.348' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.349' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.350' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.351' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.352' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.353' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.354' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.355' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.356' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.357' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.358' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.359' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.360' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.361' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.362' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.363' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.364' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.365' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.366' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.367' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.368' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.369' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.370' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.371' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.372' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.373' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.374' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.375' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.376' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.377' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.378' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.379' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.380' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.381' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.382' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.383' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.384' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.385' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.386' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.387' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.388' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.389' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.390' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.391' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.392' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.393' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.394' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.395' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.396' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.397' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.398' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.399' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.400' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.401' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.402' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.403' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.404' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.405' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.406' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.407' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.408' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.409' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.410' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.411' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.412' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.413' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.414' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.415' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.416' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.417' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.418' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.419' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.420' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.421' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.422' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.423' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.424' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.425' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.426' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.427' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.428' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.429' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.430' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.431' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.432' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.433' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.434' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.435' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.436' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.437' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.438' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.439' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.440' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.441' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.442' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.443' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.444' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.445' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.446' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.447' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.448' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.449' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.450' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.451' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.452' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.453' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.454' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.455' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.456' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.457' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.458' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.459' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.460' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.461' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.462' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.463' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.464' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.465' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.466' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.467' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.468' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.469' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.470' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.471' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.472' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.473' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.474' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.475' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.476' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.477' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.478' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.479' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.480' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.481' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.482' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.483' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.484' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.485' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.486' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.487' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.488' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.489' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.490' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.491' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.492' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.493' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.494' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.495' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.496' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.497' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.498' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.499' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.500' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.501' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.502' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.503' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.504' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.505' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.506' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.507' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.508' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.509' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.510' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.511' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.256' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.257' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.258' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.259' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.260' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.261' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.262' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.263' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.264' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.265' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.266' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.267' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.268' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.269' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.270' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.271' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.272' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.273' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.274' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.275' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.276' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.277' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.278' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.279' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.280' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.281' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.282' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.283' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.284' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.285' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.286' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.287' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.288' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.289' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.290' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.291' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.292' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.293' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.294' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.295' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.296' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.297' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.298' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.299' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.300' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.301' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.302' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.303' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.304' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.305' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.306' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.307' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.308' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.309' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.310' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.311' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.312' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.313' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.314' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.315' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.316' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.317' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.318' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.319' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.320' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.321' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.322' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.323' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.324' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.325' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.326' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.327' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.328' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.329' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.330' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.331' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.332' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.333' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.334' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.335' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.336' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.337' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.338' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.339' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.340' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.341' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.342' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.343' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.344' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.345' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.346' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.347' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.348' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.349' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.350' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.351' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.352' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.353' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.354' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.355' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.356' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.357' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.358' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.359' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.360' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.361' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.362' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.363' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.364' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.365' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.366' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.367' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.368' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.369' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.370' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.371' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.372' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.373' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.374' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.375' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.376' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.377' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.378' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.379' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.380' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.381' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.382' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.383' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.384' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.385' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.386' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.387' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.388' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.389' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.390' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.391' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.392' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.393' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.394' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.395' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.396' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.397' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.398' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.399' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.400' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.401' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.402' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.403' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.404' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.405' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.406' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.407' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.408' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.409' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.410' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.411' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.412' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.413' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.414' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.415' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.416' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.417' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.418' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.419' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.420' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.421' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.422' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.423' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.424' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.425' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.426' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.427' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.428' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.429' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.430' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.431' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.432' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.433' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.434' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.435' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.436' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.437' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.438' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.439' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.440' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.441' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.442' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.443' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.444' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.445' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.446' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.447' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.448' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.449' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.450' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.451' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.452' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.453' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.454' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.455' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.456' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.457' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.458' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.459' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.460' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.461' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.462' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.463' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.464' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.465' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.466' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.467' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.468' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.469' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.470' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.471' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.472' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.473' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.474' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.475' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.476' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.477' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.478' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.479' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.480' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.481' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.482' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.483' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.484' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.485' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.486' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.487' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.488' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.489' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.490' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.491' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.492' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.493' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.494' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.495' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.496' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.497' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.498' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.499' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.500' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.501' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.502' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.503' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.504' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.505' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.506' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.507' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.508' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.509' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.510' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.511' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:13:45 ; elapsed = 00:13:45 . Memory (MB): peak = 1621.980 ; gain = 1217.605 ; free physical = 29312 ; free virtual = 45841
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:27:07 ; elapsed = 00:27:09 . Memory (MB): peak = 7706.969 ; gain = 7302.594 ; free physical = 23086 ; free virtual = 39619
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1741.4 seconds; current allocated memory: 2.827 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 128.23 seconds; current allocated memory: 2.876 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 112.86 seconds; current allocated memory: 2.881 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.8 seconds; current allocated memory: 2.881 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 53.62 seconds; current allocated memory: 2.905 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 84.55 seconds; current allocated memory: 2.938 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 143.25 seconds; current allocated memory: 2.967 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 96.51 seconds; current allocated memory: 3.010 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 183.39 seconds; current allocated memory: 3.106 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 434.98 seconds; current allocated memory: 3.231 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 286.6 seconds; current allocated memory: 3.317 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 123.69 seconds; current allocated memory: 3.491 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.35 seconds; current allocated memory: 1.596 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 96.86 seconds; current allocated memory: 1.799 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 299.12 seconds; current allocated memory: 3.452 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:08:38 ; elapsed = 01:09:30 . Memory (MB): peak = 17291.004 ; gain = 16886.629 ; free physical = 11510 ; free virtual = 30282
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 4174.7 seconds; peak allocated memory: 3.491 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 05:02:17 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 05:02:19 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29886 ; free virtual = 46406
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29886 ; free virtual = 46406
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29873 ; free virtual = 46396
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29864 ; free virtual = 46388
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 8.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:04:38 ; elapsed = 00:04:37 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29759 ; free virtual = 46286
ERROR: [HLS 200-70] cannot find file '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1/.autopilot/db/a.o.2.bc'
ERROR: [HLS 200-70] Missing input IR for building data models
command 'ap_source' returned error code
    while executing
"source ./script.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel \#0 [list source $arg] "

INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 05:06:57 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 05:06:58 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29887 ; free virtual = 46408
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29887 ; free virtual = 46408
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29875 ; free virtual = 46398
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29867 ; free virtual = 46391
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:33 ; elapsed = 00:11:32 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29686 ; free virtual = 46216
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:30 ; elapsed = 00:25:31 . Memory (MB): peak = 7598.965 ; gain = 7194.590 ; free physical = 23134 ; free virtual = 39669
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1642.56 seconds; current allocated memory: 2.833 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 110.18 seconds; current allocated memory: 2.882 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 96.27 seconds; current allocated memory: 2.887 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.66 seconds; current allocated memory: 2.887 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.78 seconds; current allocated memory: 2.911 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 73.47 seconds; current allocated memory: 2.944 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 131.98 seconds; current allocated memory: 2.973 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 85.18 seconds; current allocated memory: 3.016 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 172.64 seconds; current allocated memory: 3.112 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 394.33 seconds; current allocated memory: 3.237 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 242.96 seconds; current allocated memory: 3.323 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 106.88 seconds; current allocated memory: 3.497 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.78 seconds; current allocated memory: 1.602 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 83.28 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 284.03 seconds; current allocated memory: 3.458 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:02:47 ; elapsed = 01:03:37 . Memory (MB): peak = 17262.703 ; gain = 16858.328 ; free physical = 11574 ; free virtual = 30346
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3821.48 seconds; peak allocated memory: 3.497 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 06:10:40 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 06:10:43 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29884 ; free virtual = 46409
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29884 ; free virtual = 46409
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29870 ; free virtual = 46397
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29862 ; free virtual = 46390
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 32.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:26 ; elapsed = 00:11:25 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29632 ; free virtual = 46166
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:20 ; elapsed = 00:25:22 . Memory (MB): peak = 7724.965 ; gain = 7320.590 ; free physical = 23119 ; free virtual = 39658
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1632.34 seconds; current allocated memory: 2.833 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 112.58 seconds; current allocated memory: 2.882 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 98.58 seconds; current allocated memory: 2.887 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.67 seconds; current allocated memory: 2.887 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.27 seconds; current allocated memory: 2.911 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 74.5 seconds; current allocated memory: 2.945 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 133.86 seconds; current allocated memory: 2.973 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 88.86 seconds; current allocated memory: 3.016 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 178.46 seconds; current allocated memory: 3.112 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 401.18 seconds; current allocated memory: 3.237 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 250.99 seconds; current allocated memory: 3.323 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 110.2 seconds; current allocated memory: 3.497 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.71 seconds; current allocated memory: 1.602 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 88.29 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 289.31 seconds; current allocated memory: 3.458 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:03:27 ; elapsed = 01:04:21 . Memory (MB): peak = 17288.996 ; gain = 16884.621 ; free physical = 11314 ; free virtual = 30326
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3865.48 seconds; peak allocated memory: 3.497 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 07:15:08 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 07:15:11 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29626 ; free virtual = 46389
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29626 ; free virtual = 46389
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29612 ; free virtual = 46378
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29604 ; free virtual = 46370
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 64.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:33 ; elapsed = 00:11:32 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29276 ; free virtual = 46049
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:25:40 ; elapsed = 00:25:41 . Memory (MB): peak = 7724.965 ; gain = 7320.590 ; free physical = 22852 ; free virtual = 39629
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1651.83 seconds; current allocated memory: 2.833 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 112.12 seconds; current allocated memory: 2.883 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 98.2 seconds; current allocated memory: 2.887 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 2.888 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.28 seconds; current allocated memory: 2.911 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 74.73 seconds; current allocated memory: 2.945 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 133.97 seconds; current allocated memory: 2.973 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 87.24 seconds; current allocated memory: 3.016 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 173.2 seconds; current allocated memory: 3.112 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 402.44 seconds; current allocated memory: 3.238 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 249.96 seconds; current allocated memory: 3.324 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 110.12 seconds; current allocated memory: 3.497 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.89 seconds; current allocated memory: 1.602 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 84.76 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 289.02 seconds; current allocated memory: 3.458 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:03:37 ; elapsed = 01:04:29 . Memory (MB): peak = 17286.590 ; gain = 16882.215 ; free physical = 11314 ; free virtual = 30330
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3873.62 seconds; peak allocated memory: 3.497 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 08:19:44 2022...
Running Synthesis...
Synthesis ended
{'FF': 110600, 'DSP': 8201, 'LUT': 284775, 'BRAM': 2, 'resources': 3516166.3400000003, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
None
Running Synthesis...
Synthesis ended
{'FF': 110600, 'DSP': 8201, 'LUT': 284775, 'BRAM': 2, 'resources': 3516166.3400000003, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 8 -dim 1 gradient
Running Synthesis...
****Error in synthesis****
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 16 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 32 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 64 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 128 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 256 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 512 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 8 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
****Error in synthesis****
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 16 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 32 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 64 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 08:19:47 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29621 ; free virtual = 46389
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29621 ; free virtual = 46389
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29607 ; free virtual = 46377
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29599 ; free virtual = 46370
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 128.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:11:53 ; elapsed = 00:11:53 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29035 ; free virtual = 45812
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:26:01 ; elapsed = 00:26:02 . Memory (MB): peak = 7650.965 ; gain = 7246.590 ; free physical = 22848 ; free virtual = 39630
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1673.41 seconds; current allocated memory: 2.834 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 112.69 seconds; current allocated memory: 2.884 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 98.52 seconds; current allocated memory: 2.888 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.67 seconds; current allocated memory: 2.889 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.61 seconds; current allocated memory: 2.912 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 75.92 seconds; current allocated memory: 2.946 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 134.09 seconds; current allocated memory: 2.974 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 87.35 seconds; current allocated memory: 3.017 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 174.09 seconds; current allocated memory: 3.113 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 404.52 seconds; current allocated memory: 3.239 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 251.92 seconds; current allocated memory: 3.324 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 110.39 seconds; current allocated memory: 3.498 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.46 seconds; current allocated memory: 1.603 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 87.13 seconds; current allocated memory: 1.806 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 290.22 seconds; current allocated memory: 3.459 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:04:10 ; elapsed = 01:05:02 . Memory (MB): peak = 17235.000 ; gain = 16830.625 ; free physical = 11283 ; free virtual = 30301
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 3906.77 seconds; peak allocated memory: 3.498 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 09:24:53 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 09:24:56 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29619 ; free virtual = 46391
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29619 ; free virtual = 46391
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29605 ; free virtual = 46379
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29597 ; free virtual = 46371
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 256.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:13:27 ; elapsed = 00:13:27 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29302 ; free virtual = 46085
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:26:48 ; elapsed = 00:26:50 . Memory (MB): peak = 7708.965 ; gain = 7304.590 ; free physical = 22839 ; free virtual = 39626
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1720.97 seconds; current allocated memory: 2.841 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 125.57 seconds; current allocated memory: 2.891 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 111.32 seconds; current allocated memory: 2.895 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.94 seconds; current allocated memory: 2.896 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.71 seconds; current allocated memory: 2.919 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 83.89 seconds; current allocated memory: 2.953 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 144.43 seconds; current allocated memory: 2.981 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 96.66 seconds; current allocated memory: 3.024 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 183.1 seconds; current allocated memory: 3.120 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 438.05 seconds; current allocated memory: 3.246 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 285.54 seconds; current allocated memory: 3.332 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 122.99 seconds; current allocated memory: 3.506 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.95 seconds; current allocated memory: 1.610 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 94.92 seconds; current allocated memory: 1.813 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 298.89 seconds; current allocated memory: 3.467 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:08:11 ; elapsed = 01:09:04 . Memory (MB): peak = 17229.000 ; gain = 16824.625 ; free physical = 11340 ; free virtual = 30365
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 4148.84 seconds; peak allocated memory: 3.506 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 10:34:05 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 10:34:07 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29612 ; free virtual = 46388
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29612 ; free virtual = 46388
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29598 ; free virtual = 46376
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29590 ; free virtual = 46369
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a cyclic factor 512.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.256' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.257' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.258' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.259' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.260' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.261' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.262' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.263' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.264' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.265' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.266' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.267' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.268' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.269' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.270' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.271' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.272' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.273' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.274' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.275' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.276' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.277' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.278' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.279' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.280' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.281' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.282' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.283' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.284' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.285' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.286' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.287' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.288' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.289' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.290' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.291' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.292' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.293' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.294' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.295' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.296' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.297' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.298' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.299' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.300' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.301' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.302' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.303' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.304' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.305' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.306' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.307' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.308' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.309' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.310' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.311' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.312' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.313' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.314' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.315' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.316' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.317' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.318' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.319' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.320' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.321' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.322' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.323' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.324' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.325' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.326' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.327' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.328' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.329' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.330' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.331' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.332' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.333' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.334' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.335' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.336' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.337' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.338' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.339' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.340' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.341' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.342' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.343' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.344' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.345' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.346' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.347' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.348' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.349' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.350' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.351' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.352' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.353' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.354' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.355' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.356' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.357' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.358' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.359' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.360' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.361' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.362' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.363' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.364' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.365' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.366' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.367' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.368' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.369' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.370' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.371' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.372' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.373' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.374' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.375' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.376' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.377' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.378' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.379' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.380' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.381' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.382' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.383' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.384' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.385' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.386' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.387' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.388' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.389' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.390' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.391' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.392' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.393' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.394' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.395' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.396' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.397' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.398' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.399' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.400' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.401' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.402' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.403' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.404' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.405' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.406' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.407' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.408' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.409' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.410' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.411' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.412' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.413' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.414' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.415' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.416' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.417' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.418' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.419' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.420' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.421' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.422' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.423' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.424' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.425' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.426' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.427' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.428' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.429' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.430' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.431' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.432' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.433' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.434' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.435' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.436' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.437' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.438' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.439' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.440' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.441' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.442' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.443' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.444' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.445' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.446' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.447' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.448' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.449' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.450' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.451' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.452' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.453' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.454' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.455' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.456' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.457' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.458' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.459' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.460' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.461' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.462' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.463' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.464' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.465' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.466' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.467' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.468' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.469' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.470' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.471' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.472' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.473' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.474' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.475' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.476' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.477' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.478' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.479' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.480' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.481' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.482' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.483' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.484' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.485' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.486' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.487' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.488' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.489' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.490' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.491' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.492' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.493' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.494' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.495' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.496' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.497' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.498' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.499' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.500' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.501' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.502' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.503' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.504' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.505' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.506' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.507' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.508' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.509' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.510' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.511' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.256' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.257' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.258' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.259' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.260' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.261' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.262' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.263' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.264' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.265' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.266' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.267' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.268' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.269' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.270' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.271' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.272' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.273' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.274' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.275' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.276' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.277' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.278' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.279' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.280' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.281' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.282' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.283' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.284' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.285' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.286' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.287' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.288' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.289' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.290' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.291' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.292' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.293' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.294' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.295' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.296' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.297' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.298' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.299' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.300' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.301' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.302' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.303' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.304' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.305' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.306' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.307' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.308' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.309' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.310' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.311' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.312' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.313' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.314' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.315' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.316' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.317' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.318' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.319' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.320' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.321' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.322' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.323' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.324' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.325' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.326' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.327' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.328' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.329' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.330' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.331' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.332' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.333' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.334' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.335' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.336' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.337' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.338' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.339' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.340' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.341' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.342' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.343' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.344' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.345' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.346' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.347' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.348' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.349' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.350' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.351' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.352' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.353' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.354' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.355' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.356' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.357' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.358' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.359' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.360' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.361' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.362' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.363' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.364' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.365' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.366' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.367' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.368' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.369' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.370' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.371' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.372' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.373' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.374' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.375' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.376' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.377' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.378' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.379' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.380' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.381' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.382' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.383' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.384' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.385' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.386' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.387' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.388' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.389' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.390' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.391' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.392' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.393' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.394' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.395' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.396' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.397' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.398' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.399' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.400' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.401' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.402' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.403' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.404' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.405' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.406' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.407' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.408' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.409' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.410' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.411' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.412' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.413' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.414' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.415' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.416' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.417' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.418' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.419' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.420' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.421' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.422' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.423' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.424' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.425' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.426' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.427' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.428' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.429' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.430' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.431' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.432' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.433' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.434' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.435' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.436' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.437' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.438' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.439' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.440' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.441' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.442' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.443' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.444' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.445' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.446' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.447' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.448' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.449' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.450' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.451' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.452' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.453' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.454' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.455' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.456' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.457' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.458' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.459' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.460' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.461' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.462' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.463' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.464' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.465' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.466' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.467' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.468' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.469' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.470' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.471' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.472' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.473' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.474' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.475' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.476' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.477' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.478' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.479' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.480' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.481' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.482' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.483' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.484' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.485' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.486' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.487' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.488' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.489' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.490' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.491' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.492' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.493' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.494' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.495' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.496' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.497' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.498' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.499' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.500' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.501' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.502' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.503' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.504' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.505' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.506' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.507' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.508' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.509' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.510' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.511' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:13:57 ; elapsed = 00:13:57 . Memory (MB): peak = 1621.230 ; gain = 1216.855 ; free physical = 29029 ; free virtual = 45817
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:27:17 ; elapsed = 00:27:19 . Memory (MB): peak = 7764.969 ; gain = 7360.594 ; free physical = 22813 ; free virtual = 39605
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1751.3 seconds; current allocated memory: 2.827 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 126.96 seconds; current allocated memory: 2.876 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 112.44 seconds; current allocated memory: 2.881 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.8 seconds; current allocated memory: 2.881 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.57 seconds; current allocated memory: 2.905 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 84.85 seconds; current allocated memory: 2.938 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 144.46 seconds; current allocated memory: 2.967 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 96.36 seconds; current allocated memory: 3.010 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 184.21 seconds; current allocated memory: 3.106 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 441.66 seconds; current allocated memory: 3.231 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 289.8 seconds; current allocated memory: 3.317 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 124.21 seconds; current allocated memory: 3.491 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.59 seconds; current allocated memory: 1.596 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 98.91 seconds; current allocated memory: 1.799 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 299.66 seconds; current allocated memory: 3.452 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:09:00 ; elapsed = 01:09:54 . Memory (MB): peak = 17321.000 ; gain = 16916.625 ; free physical = 11279 ; free virtual = 30309
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 4198.28 seconds; peak allocated memory: 3.491 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 11:44:05 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Wed Jun 15 11:44:08 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29606 ; free virtual = 46386
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29606 ; free virtual = 46386
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29594 ; free virtual = 46376
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29585 ; free virtual = 46368
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 563 to 562 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:13:21 ; elapsed = 00:13:21 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29124 ; free virtual = 45915
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:26:33 ; elapsed = 00:26:34 . Memory (MB): peak = 7646.152 ; gain = 7241.777 ; free physical = 22845 ; free virtual = 39640
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1705.19 seconds; current allocated memory: 2.829 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 121.4 seconds; current allocated memory: 2.878 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 107.57 seconds; current allocated memory: 2.883 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.74 seconds; current allocated memory: 2.883 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 53.09 seconds; current allocated memory: 2.907 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 81.77 seconds; current allocated memory: 2.940 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 140.8 seconds; current allocated memory: 2.969 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 93.42 seconds; current allocated memory: 3.011 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 180.4 seconds; current allocated memory: 3.106 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 427.89 seconds; current allocated memory: 3.231 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 274.34 seconds; current allocated memory: 3.317 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 118.95 seconds; current allocated memory: 3.491 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 84.67 seconds; current allocated memory: 1.596 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 92.48 seconds; current allocated memory: 1.798 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-104] Estimated max fanout for 'SgdLR_sw' is 32768 from HDL expression: (((1'b1 == ap_CS_fsm_state1079) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1052) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state1025) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state998) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state971) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state944) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state917) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state890) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state863) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state836) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state809) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state782) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state755) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state728) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state701) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state674) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state647) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state620) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state593) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state566) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state539) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state512) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state485) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state458) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state431) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state404) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state377) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state350) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state323) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state296) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state269) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state242) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state215) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state188) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state161) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state107) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_computeGradient_fu_1498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_computeGradient_fu_1498_ap_done == 1'b1)))
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 294.36 seconds; current allocated memory: 3.451 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 132.62 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 01:06:52 ; elapsed = 01:07:44 . Memory (MB): peak = 17205.008 ; gain = 16800.633 ; free physical = 11297 ; free virtual = 30327
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 4068.69 seconds; peak allocated memory: 3.491 GB.
INFO: [Common 17-206] Exiting vivado_hls at Wed Jun 15 12:51:56 2022...
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 128 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 256 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 512 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 16 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll -factor 8 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 8 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type complete -dim 1 "SgdLR_sw" gradient
Running Synthesis...
Synthesis ended
{'FF': 160109, 'DSP': 8201, 'LUT': 280755, 'BRAM': 0, 'resources': 3556540.68, 'latency': 46736460}

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Thu Jun 16 02:44:10 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29593 ; free virtual = 46388
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29593 ; free virtual = 46388
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29580 ; free virtual = 46377
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 29571 ; free virtual = 46369
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
WARNING: [XFORM 203-505] Pipeline directive for loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' has been removed because the loop is unrolled completely.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 32.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 141 to 140 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 32.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-102] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 01:29:28 ; elapsed = 01:29:28 . Memory (MB): peak = 1524.969 ; gain = 1120.594 ; free physical = 28962 ; free virtual = 45774
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 04:04:22 ; elapsed = 04:04:28 . Memory (MB): peak = 26264.977 ; gain = 25860.602 ; free physical = 4321 ; free virtual = 21137
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'dotProduct'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14788.8 seconds; current allocated memory: 2.791 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 289.8 seconds; current allocated memory: 2.841 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'Sigmoid'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 275.91 seconds; current allocated memory: 2.845 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.92 seconds; current allocated memory: 2.846 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'computeGradient'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 54.08 seconds; current allocated memory: 2.869 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 197.67 seconds; current allocated memory: 2.903 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'updateParameter'.
WARNING: [SCHED 204-68] The II Violation in module 'updateParameter' (Function: updateParameter): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('param_V_addr_write_ln44', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) of variable 'trunc_ln', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44 on array 'param_V' and 'load' operation ('param_V_load', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('param_V_load_4', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) on array 'param_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'param_V'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive: Unable to pipeline the region.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 256.25 seconds; current allocated memory: 2.931 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 198.13 seconds; current allocated memory: 2.974 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
WARNING: [SCHED 204-67] Unable to satisfy pipeline directive: subfunction 'dotProduct' is not pipelined.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2769.89 seconds; current allocated memory: 3.350 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 8504.85 seconds; current allocated memory: 178.614 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 2992.76 seconds; current allocated memory: 267.051 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_0' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_0' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_0' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_0' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 288.94 seconds; current allocated memory: 445.119 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'computeGradient' is 114689 from HDL expression: (1'b1 == ap_CS_fsm_state515)
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 95.58 seconds; current allocated memory: 2.540 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 211.88 seconds; current allocated memory: 2.742 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
/tools/Xilinx/Vivado/2020.1/bin/rdiArgs.sh: line 286: 213466 Killed                  "$RDI_PROG" "$@"

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Thu Jun 16 11:39:16 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:15 ; elapsed = 00:00:33 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30897 ; free virtual = 46457
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:15 ; elapsed = 00:00:33 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30897 ; free virtual = 46457
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:16 ; elapsed = 00:00:34 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30879 ; free virtual = 46447
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:34 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30870 ; free virtual = 46439
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 128.
INFO: [XFORM 203-501] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' partially with a factor of 512.
INFO: [XFORM 203-501] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' partially with a factor of 256.
WARNING: [XFORM 203-561] Updating loop upper bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop upper bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 36 to 35 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:34 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30793 ; free virtual = 46381
INFO: [HLS 200-472] Inferring partial write operation for 'grad.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34:15)
INTERNAL-INFO: never seen llvm instruction 'fexp'(507)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:02:22 ; elapsed = 00:02:41 . Memory (MB): peak = 1822.965 ; gain = 1418.590 ; free physical = 29877 ; free virtual = 45474
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'SgdLR_sw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'DOT'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 168.48 seconds; current allocated memory: 1.052 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 1.053 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 1.053 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 1.053 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'GRAD'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('feature_V_load_2', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) on array 'feature_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_V'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 128, Depth = 131.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.96 seconds; current allocated memory: 1.062 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 4.79 seconds; current allocated memory: 1.072 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.05 seconds; current allocated memory: 1.089 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 10.49 seconds; current allocated memory: 1.112 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 550.75 seconds; current allocated memory: 1.152 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] After resource sharing, estimated clock period (8.0962ns) exceeds the target (target clock period: 8ns, clock uncertainty: 1ns, effective delay budget: 7ns).
INFO: [BIND 205-100] The critical path consists of the following:
	'call' operation ('tmp_6', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) to 'dotProduct' (0 ns)
	'call' operation ('prob_V', ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:65) to 'Sigmoid' (8.1 ns)
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 55.37 seconds; current allocated memory: 1.217 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'dotProduct' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'dotProduct'.
INFO: [HLS 200-111]  Elapsed time: 14.54 seconds; current allocated memory: 1.220 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Sigmoid' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fadd_32ns_32ns_32_4_full_dsp_1' to 'SgdLR_sw_fadd_32nbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fdiv_32ns_32ns_32_7_1' to 'SgdLR_sw_fdiv_32ncud' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fpext_32ns_64_1_1' to 'SgdLR_sw_fpext_32dEe' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'SgdLR_sw_fexp_32ns_32ns_32_5_full_dsp_1' to 'SgdLR_sw_fexp_32neOg' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fadd_32nbkb': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fdiv_32ncud': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fexp_32neOg': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'SgdLR_sw_fpext_32dEe': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Sigmoid'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 1.221 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'computeGradient' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'computeGradient'.
INFO: [HLS 200-111]  Elapsed time: 0.99 seconds; current allocated memory: 1.241 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'updateParameter' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'updateParameter'.
INFO: [HLS 200-111]  Elapsed time: 8.6 seconds; current allocated memory: 1.319 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'SgdLR_sw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/data_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/label_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'SgdLR_sw/theta_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'SgdLR_sw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'SgdLR_sw'.
INFO: [HLS 200-111]  Elapsed time: 146.33 seconds; current allocated memory: 1.588 GB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 123.51 MHz
INFO: [RTMG 210-278] Implementing memory 'SgdLR_sw_gradient_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:16:25 ; elapsed = 00:17:00 . Memory (MB): peak = 3218.992 ; gain = 2814.617 ; free physical = 27961 ; free virtual = 44256
INFO: [VHDL 208-304] Generating VHDL RTL for SgdLR_sw.
INFO: [VLOG 209-307] Generating Verilog RTL for SgdLR_sw.
INFO: [HLS 200-112] Total elapsed time: 1020.62 seconds; peak allocated memory: 1.588 GB.
INFO: [Common 17-206] Exiting vivado_hls at Thu Jun 16 11:56:15 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Thu Jun 16 11:56:18 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30843 ; free virtual = 46463
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30843 ; free virtual = 46463
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30830 ; free virtual = 46452
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30822 ; free virtual = 46444
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
INFO: [XFORM 203-501] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' partially with a factor of 512.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
WARNING: [XFORM 203-561] Updating loop upper bound from 9 to 8 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 9 to 8 for loop 'TRAINING_INST' in function 'SgdLR_sw'.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 with a block factor 512.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.256' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.257' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.258' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.259' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.260' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.261' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.262' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.263' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.264' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.265' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.266' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.267' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.268' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.269' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.270' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.271' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.272' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.273' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.274' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.275' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.276' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.277' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.278' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.279' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.280' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.281' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.282' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.283' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.284' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.285' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.286' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.287' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.288' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.289' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.290' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.291' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.292' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.293' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.294' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.295' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.296' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.297' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.298' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.299' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.300' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.301' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.302' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.303' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.304' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.305' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.306' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.307' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.308' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.309' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.310' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.311' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.312' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.313' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.314' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.315' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.316' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.317' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.318' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.319' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.320' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.321' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.322' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.323' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.324' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.325' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.326' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.327' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.328' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.329' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.330' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.331' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.332' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.333' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.334' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.335' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.336' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.337' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.338' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.339' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.340' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.341' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.342' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.343' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.344' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.345' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.346' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.347' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.348' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.349' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.350' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.351' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.352' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.353' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.354' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.355' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.356' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.357' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.358' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.359' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.360' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.361' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.362' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.363' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.364' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.365' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.366' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.367' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.368' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.369' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.370' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.371' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.372' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.373' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.374' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.375' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.376' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.377' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.378' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.379' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.380' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.381' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.382' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.383' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.384' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.385' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.386' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.387' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.388' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.389' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.390' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.391' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.392' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.393' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.394' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.395' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.396' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.397' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.398' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.399' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.400' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.401' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.402' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.403' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.404' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.405' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.406' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.407' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.408' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.409' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.410' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.411' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.412' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.413' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.414' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.415' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.416' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.417' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.418' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.419' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.420' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.421' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.422' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.423' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.424' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.425' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.426' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.427' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.428' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.429' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.430' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.431' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.432' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.433' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.434' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.435' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.436' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.437' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.438' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.439' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.440' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.441' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.442' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.443' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.444' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.445' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.446' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.447' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.448' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.449' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.450' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.451' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.452' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.453' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.454' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.455' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.456' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.457' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.458' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.459' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.460' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.461' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.462' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.463' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.464' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.465' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.466' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.467' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.468' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.469' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.470' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.471' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.472' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.473' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.474' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.475' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.476' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.477' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.478' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.479' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.480' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.481' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.482' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.483' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.484' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.485' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.486' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.487' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.488' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.489' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.490' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.491' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.492' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.493' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.494' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.495' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.496' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.497' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.498' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.499' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.500' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.501' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.502' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.503' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.504' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.505' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.506' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.507' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.508' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.509' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.510' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'gradient.V.511' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.0' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.1' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.2' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.3' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.4' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.5' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.6' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.7' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.8' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.9' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.10' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.11' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.12' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.13' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.14' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.15' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.16' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.17' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.18' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.19' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.20' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.21' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.22' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.23' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.24' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.25' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.26' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.27' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.28' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.29' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.30' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.31' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.32' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.33' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.34' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.35' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.36' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.37' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.38' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.39' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.40' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.41' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.42' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.43' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.44' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.45' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.46' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.47' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.48' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.49' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.50' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.51' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.52' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.53' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.54' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.55' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.56' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.57' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.58' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.59' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.60' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.61' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.62' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.63' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.64' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.65' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.66' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.67' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.68' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.69' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.70' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.71' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.72' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.73' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.74' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.75' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.76' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.77' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.78' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.79' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.80' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.81' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.82' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.83' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.84' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.85' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.86' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.87' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.88' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.89' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.90' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.91' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.92' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.93' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.94' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.95' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.96' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.97' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.98' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.99' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.100' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.101' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.102' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.103' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.104' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.105' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.106' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.107' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.108' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.109' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.110' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.111' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.112' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.113' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.114' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.115' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.116' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.117' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.118' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.119' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.120' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.121' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.122' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.123' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.124' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.125' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.126' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.127' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.128' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.129' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.130' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.131' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.132' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.133' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.134' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.135' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.136' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.137' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.138' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.139' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.140' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.141' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.142' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.143' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.144' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.145' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.146' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.147' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.148' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.149' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.150' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.151' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.152' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.153' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.154' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.155' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.156' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.157' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.158' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.159' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.160' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.161' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.162' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.163' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.164' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.165' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.166' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.167' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.168' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.169' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.170' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.171' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.172' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.173' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.174' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.175' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.176' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.177' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.178' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.179' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.180' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.181' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.182' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.183' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.184' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.185' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.186' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.187' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.188' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.189' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.190' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.191' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.192' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.193' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.194' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.195' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.196' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.197' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.198' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.199' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.200' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.201' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.202' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.203' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.204' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.205' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.206' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.207' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.208' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.209' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.210' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.211' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.212' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.213' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.214' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.215' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.216' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.217' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.218' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.219' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.220' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.221' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.222' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.223' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.224' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.225' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.226' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.227' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.228' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.229' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.230' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.231' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.232' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.233' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.234' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.235' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.236' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.237' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.238' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.239' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.240' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.241' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.242' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.243' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.244' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.245' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.246' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.247' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.248' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.249' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.250' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.251' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.252' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.253' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.254' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.255' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.256' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.257' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.258' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.259' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.260' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.261' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.262' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.263' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.264' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.265' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.266' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.267' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.268' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.269' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.270' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.271' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.272' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.273' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.274' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.275' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.276' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.277' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.278' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.279' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.280' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.281' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.282' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.283' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.284' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.285' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.286' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.287' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.288' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.289' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.290' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.291' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.292' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.293' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.294' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.295' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.296' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.297' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.298' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.299' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.300' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.301' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.302' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.303' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.304' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.305' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.306' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.307' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.308' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.309' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.310' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.311' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.312' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.313' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.314' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.315' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.316' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.317' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.318' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.319' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.320' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.321' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.322' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.323' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.324' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.325' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.326' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.327' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.328' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.329' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.330' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.331' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.332' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.333' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.334' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.335' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.336' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.337' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.338' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.339' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.340' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.341' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.342' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.343' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.344' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.345' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.346' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.347' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.348' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.349' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.350' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.351' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.352' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.353' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.354' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.355' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.356' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.357' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.358' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.359' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.360' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.361' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.362' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.363' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.364' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.365' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.366' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.367' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.368' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.369' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.370' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.371' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.372' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.373' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.374' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.375' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.376' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.377' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.378' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.379' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.380' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.381' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.382' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.383' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.384' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.385' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.386' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.387' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.388' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.389' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.390' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.391' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.392' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.393' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.394' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.395' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.396' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.397' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.398' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.399' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.400' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.401' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.402' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.403' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.404' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.405' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.406' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.407' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.408' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.409' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.410' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.411' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.412' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.413' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.414' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.415' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.416' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.417' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.418' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.419' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.420' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.421' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.422' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.423' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.424' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.425' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.426' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.427' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.428' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.429' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.430' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.431' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.432' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.433' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.434' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.435' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.436' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.437' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.438' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.439' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.440' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.441' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.442' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.443' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.444' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.445' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.446' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.447' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.448' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.449' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.450' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.451' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.452' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.453' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.454' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.455' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.456' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.457' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.458' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.459' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.460' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.461' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.462' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.463' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.464' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.465' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.466' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.467' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.468' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.469' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.470' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.471' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.472' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.473' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.474' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.475' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.476' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.477' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.478' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.479' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.480' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.481' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.482' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.483' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.484' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.485' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.486' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.487' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.488' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.489' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.490' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.491' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.492' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.493' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.494' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.495' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.496' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.497' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.498' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.499' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.500' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.501' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.502' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.503' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.504' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.505' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.506' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.507' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.508' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.509' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.510' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'gradient.V.511' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) to (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24:30) in function 'Sigmoid'... converting 19 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 19:57:56 ; elapsed = 19:58:03 . Memory (MB): peak = 3178.309 ; gain = 2773.934 ; free physical = 27767 ; free virtual = 44581
WARNING: [XFORM 203-542] Cannot flatten a loop nest 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58:4) in function 'SgdLR_sw' : 

the outer loop is not a perfect loop because there is nontrivial logic in the sub loop header.
/tools/Xilinx/Vivado/2020.1/bin/rdiArgs.sh: line 286: 214434 Killed                  "$RDI_PROG" "$@"

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Sat Jun 18 15:26:46 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:15 ; elapsed = 00:00:33 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30880 ; free virtual = 46464
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:15 ; elapsed = 00:00:33 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30880 ; free virtual = 46464
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:16 ; elapsed = 00:00:34 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30862 ; free virtual = 46454
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:34 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30853 ; free virtual = 46446
INFO: [HLS 200-489] Unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' completely with a factor of 5.
ERROR: [XFORM 203-504] Stop unrolling loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' because it may cause large runtime and excessive memory usage due to increase in code size. Please avoid unrolling the loop or form sub-functions for code in the loop body.
ERROR: [HLS 200-70] Pre-synthesis failed.
command 'ap_source' returned error code
    while executing
"source ./script.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel \#0 [list source $arg] "

INFO: [Common 17-206] Exiting vivado_hls at Sat Jun 18 15:27:18 2022...

****** Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vivado/2020.1/scripts/vivado_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vivado/2020.1/bin/unwrapped/lnx64.o/vivado_hls'
INFO: [HLS 200-10] For user 'npschuster' on host 'hulkLSE' (Linux_x86_64 version 5.13.0-40-generic) on Sat Jun 18 15:27:20 -03 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.3 LTS
INFO: [HLS 200-10] In directory '/home/npschuster/raise_dse/raise_dse'
Sourcing Tcl script './script.tcl'
INFO: [HLS 200-10] Creating and opening project '/home/npschuster/raise_dse/raise_dse/Raise_dse'.
INFO: [HLS 200-10] Adding design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/home/npschuster/raise_dse/raise_dse/Raise_dse/solution1'.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-e'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 8ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file './benchmarks/spam-filter/src/sw/sgd_sw.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30871 ; free virtual = 46465
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30871 ; free virtual = 46465
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30857 ; free virtual = 46454
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'dotProduct' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:63) automatically.
INFO: [XFORM 203-602] Inlining function 'computeGradient' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:67) automatically.
INFO: [XFORM 203-602] Inlining function 'updateParameter' into 'SgdLR_sw' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:69) automatically.
WARNING: [SYNCHK 200-23] ./benchmarks/spam-filter/src/sw/sgd_sw.cpp:24: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:14 ; elapsed = 00:00:14 . Memory (MB): peak = 1504.129 ; gain = 1099.754 ; free physical = 30849 ; free virtual = 46447
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'EPOCH' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:58) in function 'SgdLR_sw' for pipelining.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'updateParameter' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:39).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'computeGradient' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:29).
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) because its parent loop or function is pipelined.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'dotProduct' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:13).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'TRAINING_INST' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:61) in function 'SgdLR_sw' completely with a factor of 4500.
INFO: [HLS 200-489] Unrolling loop 'UPDATE' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:44) in function 'updateParameter' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'GRAD' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:34) in function 'computeGradient' completely with a factor of 1024.
INFO: [HLS 200-489] Unrolling loop 'DOT' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:18) in function 'dotProduct' completely with a factor of 1024.
INFO: [XFORM 203-101] Partitioning array 'gradient.V' (./benchmarks/spam-filter/src/sw/sgd_sw.cpp:53) in dimension 1 completely.
Terminated

set_directive_unroll -factor 64 "dotProduct/DOT"

set_directive_unroll -factor 64 "computeGradient/GRAD"

set_directive_unroll -factor 512 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 32 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 32 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
****Error in synthesis****
set_directive_pipeline "dotProduct/DOT"

set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll -factor 256 "computeGradient/GRAD"

set_directive_unroll -factor 512 "updateParameter/UPDATE"
set_directive_unroll "SgdLR_sw/EPOCH"


set_directive_unroll -factor 128 "SgdLR_sw/TRAINING_INST"

Running Synthesis...
Synthesis ended
{'FF': 54122, 'DSP': 2571, 'LUT': 124088, 'BRAM': 2, 'resources': 1192135.94, 'latency': 58128700}
0



set_directive_unroll -factor 256 "computeGradient/GRAD"

set_directive_unroll -factor 256 "updateParameter/UPDATE"


set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 512 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type block -factor 512 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
****Error in synthesis****
set_directive_pipeline "dotProduct/DOT"
set_directive_unroll -factor 8 "dotProduct/DOT"

set_directive_unroll -factor 512 "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"

set_directive_unroll "SgdLR_sw/EPOCH"


set_directive_unroll "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type cyclic -factor 16 -dim 1 "SgdLR_sw" gradient
Running Synthesis...
****Error in synthesis****

set_directive_unroll -factor 128 "dotProduct/DOT"
set_directive_pipeline "computeGradient/GRAD"
set_directive_unroll "computeGradient/GRAD"
set_directive_pipeline "updateParameter/UPDATE"
set_directive_unroll "updateParameter/UPDATE"

set_directive_pipeline "SgdLR_sw/EPOCH"
set_directive_pipeline "SgdLR_sw/TRAINING_INST"
set_directive_unroll -factor 2048 "SgdLR_sw/TRAINING_INST"
set_directive_array_partition -type complete -dim 1 "SgdLR_sw" gradient
Running Synthesis...
****Error in synthesis****
